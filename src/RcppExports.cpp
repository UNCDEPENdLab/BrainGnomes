// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// lmfit_residuals_4d
Rcpp::RObject lmfit_residuals_4d(std::string infile, const arma::mat& X, const LogicalVector& include_rows, bool add_intercept, std::string outfile, bool internal, bool preserve_mean, double set_mean);
RcppExport SEXP _BrainGnomes_lmfit_residuals_4d(SEXP infileSEXP, SEXP XSEXP, SEXP include_rowsSEXP, SEXP add_interceptSEXP, SEXP outfileSEXP, SEXP internalSEXP, SEXP preserve_meanSEXP, SEXP set_meanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type infile(infileSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const LogicalVector& >::type include_rows(include_rowsSEXP);
    Rcpp::traits::input_parameter< bool >::type add_intercept(add_interceptSEXP);
    Rcpp::traits::input_parameter< std::string >::type outfile(outfileSEXP);
    Rcpp::traits::input_parameter< bool >::type internal(internalSEXP);
    Rcpp::traits::input_parameter< bool >::type preserve_mean(preserve_meanSEXP);
    Rcpp::traits::input_parameter< double >::type set_mean(set_meanSEXP);
    rcpp_result_gen = Rcpp::wrap(lmfit_residuals_4d(infile, X, include_rows, add_intercept, outfile, internal, preserve_mean, set_mean));
    return rcpp_result_gen;
END_RCPP
}
// natural_spline_4d
Rcpp::RObject natural_spline_4d(std::string infile, const std::vector<int>& t_interpolate, bool edge_nn, std::string outfile, bool internal);
RcppExport SEXP _BrainGnomes_natural_spline_4d(SEXP infileSEXP, SEXP t_interpolateSEXP, SEXP edge_nnSEXP, SEXP outfileSEXP, SEXP internalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type infile(infileSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type t_interpolate(t_interpolateSEXP);
    Rcpp::traits::input_parameter< bool >::type edge_nn(edge_nnSEXP);
    Rcpp::traits::input_parameter< std::string >::type outfile(outfileSEXP);
    Rcpp::traits::input_parameter< bool >::type internal(internalSEXP);
    rcpp_result_gen = Rcpp::wrap(natural_spline_4d(infile, t_interpolate, edge_nn, outfile, internal));
    return rcpp_result_gen;
END_RCPP
}
// natural_spline_interp
NumericVector natural_spline_interp(NumericVector x, NumericVector y, NumericVector xout);
RcppExport SEXP _BrainGnomes_natural_spline_interp(SEXP xSEXP, SEXP ySEXP, SEXP xoutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xout(xoutSEXP);
    rcpp_result_gen = Rcpp::wrap(natural_spline_interp(x, y, xout));
    return rcpp_result_gen;
END_RCPP
}
// remove_nifti_volumes
void remove_nifti_volumes(std::string infile, const std::vector<int>& remove_tpts, std::string outfile);
RcppExport SEXP _BrainGnomes_remove_nifti_volumes(SEXP infileSEXP, SEXP remove_tptsSEXP, SEXP outfileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type infile(infileSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type remove_tpts(remove_tptsSEXP);
    Rcpp::traits::input_parameter< std::string >::type outfile(outfileSEXP);
    remove_nifti_volumes(infile, remove_tpts, outfile);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BrainGnomes_lmfit_residuals_4d", (DL_FUNC) &_BrainGnomes_lmfit_residuals_4d, 8},
    {"_BrainGnomes_natural_spline_4d", (DL_FUNC) &_BrainGnomes_natural_spline_4d, 5},
    {"_BrainGnomes_natural_spline_interp", (DL_FUNC) &_BrainGnomes_natural_spline_interp, 3},
    {"_BrainGnomes_remove_nifti_volumes", (DL_FUNC) &_BrainGnomes_remove_nifti_volumes, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_BrainGnomes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
