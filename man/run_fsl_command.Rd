% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{run_fsl_command}
\alias{run_fsl_command}
\title{Run an FSL command with optional Singularity container support and structured logging}
\usage{
run_fsl_command(
  args,
  fsldir = NULL,
  echo = TRUE,
  run = TRUE,
  intern = FALSE,
  stop_on_fail = TRUE,
  log_file = NULL,
  use_lgr = TRUE,
  fsl_img = NULL,
  bind_paths = NULL
)
}
\arguments{
\item{args}{A character vector specifying the FSL command and arguments to run (e.g., \code{"fslmaths input.nii.gz -add 1 output.nii.gz"}).}

\item{fsldir}{Optional. Path to the FSL installation directory. If \code{NULL}, the function attempts to infer it from the environment or system configuration.}

\item{echo}{Logical. Whether to print the command to standard output. Defaults to \code{TRUE}.}

\item{run}{Logical. Whether to execute the command. If \code{FALSE}, returns as if the command succeeded. Defaults to \code{TRUE}.}

\item{intern}{Logical. If \code{TRUE}, returns the standard output of the command as a character vector with \code{"retcode"} attribute. If \code{FALSE}, returns only the exit code. Defaults to \code{FALSE}.}

\item{stop_on_fail}{Logical. If \code{TRUE}, stops execution if the FSL command returns a non-zero exit code. Defaults to \code{TRUE}.}

\item{log_file}{Optional. Path to a log file for recording output. Ignored if \code{use_lgr = TRUE}.}

\item{use_lgr}{Logical. Whether to use the \code{lgr} logging framework. If \code{TRUE}, configures and logs to console and/or file appenders. Defaults to \code{TRUE}.}

\item{fsl_img}{Optional. Path to a Singularity image containing FSL. If provided, the command is executed within the container using \verb{singularity exec}.}

\item{bind_paths}{Optional. Character vector of additional directories to bind inside the Singularity container. The current working directory and temp directory are automatically added.}
}
\value{
If \code{intern = FALSE}, returns the exit code (integer) of the command. If \code{intern = TRUE}, returns the standard output as a character vector. In both cases, \code{"stdout"} and \code{"stderr"} are attached as attributes.
}
\description{
Executes an FSL command in a clean shell environment, with support for Singularity containers, optional logging via the \code{lgr} package, and flexible control over execution and output.
}
\details{
This function sets up the FSL environment by sourcing \code{fsl.sh}, and can optionally run FSL commands inside a Singularity container. Logging can be directed to both console and file using \code{lgr}, or to a file using basic \code{cat()} logging if \code{use_lgr = FALSE}.

If \code{intern = TRUE}, the command output is returned and tagged with attributes \code{stdout}, \code{stderr}, and \code{retcode}. The \code{bind_paths} argument ensures that relevant file paths are visible inside the container.
}
\examples{
\dontrun{
run_fsl_command("fslmaths input.nii.gz -add 1 output.nii.gz")
run_fsl_command("fslhd input.nii.gz", intern = TRUE)
}

}
