% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{natural_spline_interp}
\alias{natural_spline_interp}
\title{Cubic spline interpolation with natural spline and linear extrapolation}
\arguments{
\item{x}{A numeric vector of strictly increasing x-values (time or position).}

\item{y}{A numeric vector of y-values at each x (same length as x).}

\item{xout}{A numeric vector of points at which to interpolate.}
}
\value{
A numeric vector of interpolated y-values at each point in \code{xout}.
}
\description{
Performs natural cubic spline interpolation for given input values.
This function takes known data points \verb{(x, y)} and evaluates the cubic spline
interpolation at specified output points \code{xout}. It uses a natural spline
formulation with zero second derivatives at the endpoints.
}
\details{
The function performs cubic spline interpolation using a tridiagonal
system to solve for the spline coefficients. If \code{xout} values fall outside
the \code{x} range, the function uses linear extrapolation, mirror R's \code{splinefun}
with \code{method = "natural"}
}
\examples{
  x <- c(0, 1, 2, 3, 4)
  y <- c(0, 1, 0, 1, 0)
  xout <- seq(0, 4, by = 0.1)
  natural_spline_interp(x, y, xout)
}
