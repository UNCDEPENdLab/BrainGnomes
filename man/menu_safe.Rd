% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{menu_safe}
\alias{menu_safe}
\title{Portable Menu Prompt for Interactive or TTY Sessions}
\usage{
menu_safe(choices, title = NULL)
}
\arguments{
\item{choices}{A character vector of menu options to present to the user.}

\item{title}{Optional character string to display as the menu title.}
}
\value{
An integer corresponding to the selected menu item (1-based index), or 0 if cancelled.
}
\description{
This function mimics the behavior of base R's \code{menu()} function. In interactive
sessions (e.g., R console or RStudio), it calls \code{utils::menu()} directly. In
non-interactive but TTY-capable sessions (e.g., an \code{Rscript} run in a terminal),
it displays a numbered list of choices and uses standard input to read the user's selection.
}
\details{
The menu allows selection of an option by entering the corresponding number,
with \code{0} used to cancel the selection (consistent with \code{menu()} behavior).
\itemize{
\item If \code{menu_safe()} is called in an interactive R session, it defers to \code{utils::menu()}.
\item In a non-interactive terminal (TTY), it prints the options and reads user input via \code{std::getline()}.
\item If standard input is not connected to a terminal (e.g., piped input), the function returns 0 and prints a warning.
}
}
\examples{
\dontrun{
# Interactive R session
choice <- menu_safe(c("Apple", "Banana", "Cherry"), "Choose a fruit:")
if (choice == 0) cat("You cancelled the selection.\n")
else cat("You selected:", choice, "\n")

# From a terminal via Rscript
# Rscript -e 'Rcpp::sourceCpp("menu_safe.cpp"); menu_safe(c("Yes", "No"))'
}

}
\keyword{internal}
