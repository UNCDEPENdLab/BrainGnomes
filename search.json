[{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"BrainGnomes R package streamlines preprocessing analysis fMRI data high-performance computing (HPC) clusters. serves wrapper around common fMRI processing tools HeuDiConv (DICOM--BIDS conversion), BIDS Validator, MRIQC (quality control), fMRIPrep (preprocessing pipeline), ICA-AROMA (automatic removal motion artifacts), orchestrating execution coherent pipeline. package also provides additional processing steps preparing fMRI data analysis, spatial smoothing, temporal filtering, confound regression. BrainGnomes uses containerized software (Singularity images) ensure reproducible environments imaging tools manages job submission HPC schedulers (SLURM TORQUE). tutorial, walk full workflow setting running fMRI preprocessing study using BrainGnomes. cover three key functions: setup_project(): Initialize new study configuration (either scratch existing YAML configuration file) edit_project(): Interactively review modify study configuration sections run_project(): Execute preprocessing pipeline steps dataset, utilizing HPC environment Along way, assume required Singularity container images tool working HPC environment. Additional information setting compute environment provided . vignette provides example R code snippets, explains expected inputs/outputs, offers troubleshooting tips common issues. end demo, new user understand configure study launch BrainGnomes pipeline start finish.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"things-to-include-here","dir":"Articles","previous_headings":"Introduction","what":"Things to include here","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"subject filter","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"basic-process-flow-of-braingnomes","dir":"Articles","previous_headings":"Introduction","what":"Basic process flow of BrainGnomes","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"BrainGnomes identifies data subjects (sessions) DICOM BIDS folders, determines subjects need processed. processes data looping subjects, submitting jobs subject processing step HPC scheduler. ensures subject processed fully (unless crash occurs).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"prerequisites-and-setup","dir":"Articles","previous_headings":"","what":"Prerequisites and Setup","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"BrainGnomes designed support end--end processing fMRI data, original DICOM files postprocessed data ready analysis. said, required setup run given step. example, data already processed fmriprep, use BrainGnomes postprocessing. setup phase, asked Singularity containers analysis steps, many can skipped intention running step (e.g., MRIQC). using BrainGnomes, attend following prerequisites: Installation: Install BrainGnomes R package. package CRAN (yet), now, must install GitHub. load R session: Working Python installation: postprocessing, pipeline supports masking data brain mask matches stereotaxic space. example, fmriprep data MNI152NLin2009cAsym resolution 2mm, custom brain mask released template can applied data remove non-brain voxels. relies TemplateFlow (http://templateflow.org/), Python library provides number templates. step work, must working Python installation. HPC Access: Access HPC cluster job scheduler supported BrainGnomes (currently SLURM TORQUE). know scheduler cluster uses. Singularity: Singularity must available HPC system must downloaded built required container image files : fMRIPrep (e.g., .sif image fMRIPrep) HeuDiConv (container DICOM BIDS conversion) MRIQC (container MRI quality metrics) ICA-AROMA (plan use ICA-AROMA denoising) BIDS Validator (either container installed binary BIDS validation tool) Make note filesystem paths container files executables, configuration require . Data Files: DICOM files study, organized subject (optionally session) folders. heuristic file HeuDiConv (Python script defining translate DICOM filenames BIDS format). lab .py file prepared study’s naming conventions. FreeSurfer license file (e.g., license.txt FreeSurferLicense.txt). fMRIPrep requires valid FreeSurfer license run. can obtain one free FreeSurfer website. Save license file path configuration. Optionally, TemplateFlow directory want use non-default location TemplateFlow data (standard brain templates). unsure, can specify empty new directory fMRIPrep manage downloading templates . place, can proceed create study configuration.","code":"# Install (if needed) and load BrainGnomes # devtools::install_github(\"UNCDEPENdLab/BrainGnomes\") library(BrainGnomes)"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"creating-a-project-configuration-with-setup_project","dir":"Articles","previous_headings":"","what":"Creating a Project Configuration with setup_project()","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"first step using BrainGnomes create project configuration, essentially structured list containing parameters paths needed pipeline. configuration can created interactively using setup_project() function. typical use, call setup_project() arguments start new configuration scratch, interactively prompt required information. function returns object settings, saves YAML configuration file root project directory ($metadata$project_directory) called \"project_config.yaml\". later Let’s run setup_project() initialize new study config: function function ask series questions R console gather information study. outline typical prompts respond: Project Name – short name project (used labeling logging). Example: “MyStudy2025”. Project Directory – root directory project outputs stored. can provide path (absolute relative). directory exist, BrainGnomes offer create . example: “/proj/Longleaf/MyStudy2025” (contain subfolders BIDS data, fMRIPrep outputs, logs, etc.). DICOM Directory – location raw DICOM files. folder containing subfolders per subject (session). doesn’t exist, ’ll prompted create well. example: “/proj/Longleaf/MyStudy2025/data_DICOMs”. TemplateFlow Directory – Path TemplateFlow data (standard templates fMRIPrep). central TemplateFlow directory (e.g., ~/templateflow shared path), provide . Scratch Directory – path temporary scratch space. often fast storage (like $TMPDIR scratch disk) intended long-term storage. ’re sure, can use sub-directory project directory (e.g., “/proj/Longleaf/MyStudy2025/scratch”). Just make sure keep eye size folder clean periodically isn’t done automatically HPC system. asked whether want include major steps pipeline. can toggled depending intended use. example, already fmriprep-processed data wish apply postprocessing, wouldn’t need BIDS conversion. major step pipeline, asked specify following HPC scheduler settings: amount memory needed job GB. number hours needed complete job. (Always start bit higher think need avoid killed jobs.) many CPU cores requested job. command line arguments passed command (e.g., fmriprep) arguments passed HPC scheduler (e.g., SLURM) beyond pipeline already handles .","code":"# Start an interactive setup for a new fMRI study scfg <- setup_project()"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"bids-conversion","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"BIDS conversion","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"prompted whether want include BIDS conversion: Run BIDS conversion? (yes/; Press enter accept default: yes). say yes, asked location heudiconv container, followed questions memory, compute hours, CPU cores, command line arguments, scheduler arguments. BrainGnomes uses HeuDiConv (https://github.com/nipy/heudiconv) convert DICOM images BIDS-compatible files folders. HeuDiConv requires information identify subjects/sessions DICOM folder convert . part BIDS conversion setup, asked provide: Subject Regex: regular expression used match subject directories root DICOM directory. Consider, example, DICOM directory includes following folders: logs, 5300, 5420, numbered directories subject IDs. case, good regular expression identifying subjects , [0-9]+ – matching folders containing numbers. want folder root DICOM directory considered subject folder, use .*. (Optional) Session Regex: multi-session data stored DICOM directory subfolders (.e., something like sub-100/ses-1, sub-100/ses-2) may specify regular expression match session folders inside subject’s folder. example, session regex ses-[0-9]+ match subfolder starting ses- followed one numbers. multisession data form, leave blank. Subject ID Match Regex: Whereas Subject Regex specifies folders root DICOM directory considered, Subject ID Match regular expression specifies extract ID folder name. Use parentheses denote part folder name preserved part ID. example, folders named something like sub-<numbers> want keep numeric part ID, Subject ID Match Regex , sub-([0-9]+). ID stored different parts folder name, can use one set parentheses, case extracted pasted together underscore separating part. example, consider folder subject-16-visit-3. extract subject ID 16_3 using Regex: subject-([0-9]+)-visit-([0-9]+). Session Match Regex: follows logic Subject ID Match Regex, applies session folders nested within subject folders. example, folder like: subject-12/ses-1, specify subject-([0-9]+) subject ID match regex ses-([0-9]+) session match regex. Heuristic File: Path heudiconv heuristic Python script study. example: \"/proj/Longleaf/MyStudy2025/heuristic.py\". script defines naming scheme converting DICOMs BIDS format. Details preparing files can found : https://heudiconv.readthedocs.io/en/latest/heuristics.html. Overwrite Clear Cache: Boolean flags (overwrite clear_cache) determine heudiconv overwrite existing converted data clear caching runs. Usually, can accept defaults (FALSE) unless re-running conversion want start fresh.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"fmriprep-setup","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"fmriprep setup","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"Next, asked decide whether include fmriprep pipeline: want include fMRIPrep part preprocessing pipeline? (yes/; Press enter accept default: yes). say yes, asked following: Location fmriprep container Resource requirements: Defaults BrainGnomes fmriprep 48 GB RAM, 24 hours, 12 cores Additional command line arguments fmriprep. See https://fmriprep.org/en/stable/usage.html details. Additional arguments passed HPC scheduler Output Spaces: choose standard spaces fMRIPrep output preprocessed data . Common choices include MNI anatomical spaces (e.g., MNI152NLin6Asym), subject’s T1w native space, fsaverage (surface data), etc. setup_project() function present menu prompt selecting . can pick multiple spaces. example, typical selection might MNI152NLin6Asym T1w (analyzing surface data, possibly fsaverage). also asked provide ‘resolution index’ template, governs spatial resolution output image. omitted, resolution output file match voxel size input file. Note index synonymous voxel size (e.g. ‘2’ may 2mm). See https://fmriprep.org/en/stable/spaces.html#standard-spaces details. FreeSurfer License File: must provide path FreeSurfer license file fMRIPrep can run FreeSurfer preprocessing.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"mriqc-setup","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"MRIQC setup","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"Next, decide whether include MRIQC pipeline: Run MRIQC? (yes/; Press enter accept default: yes). say yes, asked : Location mriqc container Resource requirements: Defaults BrainGnomes mriqc 32 GB RAM, 12 hours, 1 core Additional command line arguments mriqc. See https://mriqc.readthedocs.io/en/latest/usage.html#command-line-interface details. Additional arguments passed HPC scheduler","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"ica-aroma-setup","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"ICA-AROMA setup","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"Next, decide whether include ICA-AROMA pipeline: Run ICA-AROMA? (yes/; Press enter accept default: yes). say yes, asked : Location ICA-AROMA container Resource requirements: Defaults BrainGnomes mriqc 32 GB RAM, 36 hours, 1 core Additional command line arguments fmripost_aroma. See https://fmripost-aroma.readthedocs.io/latest/usage.html#command-line-arguments details. Additional arguments passed HPC scheduler (Note: fMRIPrep v20.2+, ICA-AROMA longer integrated fMRIPrep must run separately BIDS-App called fmripost-aroma.)","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"postprocessing-setup","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"Postprocessing setup","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"Next, decide whether include postprocessing pipeline: want enable postprocessing BOLD data?. Postprocessing includes several optional steps, including Applying brain mask Spatial smoothing Denoising using ICA-AROMA ‘Scrubbing’ high-motion/high-artifact timepoints Temporal filtering (e.g., high-pass filtering) Intensity normalization Confound calculation regression say ‘yes’ postprocessing, asked setup one postprocessing streams data. BrainGnomes supports multiple postprocessing streams, data can postprocessed multiple ways. example, might wish compare results different levels smoothing different temporal filtering settings. specify streams, dropped menu system lookes like : additional details postprocessing, see (progress) postprocessing.html.","code":"Postprocessing supports multiple streams, allowing you to postprocess data in multiple ways. Each stream also asks about which files should be postprocessed using the stream. For example, files with 'rest' in their name could be postprocessed in one way and files with 'nback' could be processed a different way.  Current postprocessing streams:   (none defined yet) Modify postprocessing streams:   1: Add a stream 2: Edit a stream 3: Delete a stream 4: Show stream settings 5: Finish"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"bids-validation-setup","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"BIDS validation setup","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"optional part pipeline, bids-validator can run BIDS directory (BIDS conversion completed). accomplished run_bids_validation(), can run needed. , saying yes prompt Enable BIDS validation? (yes/; Press enter accept default: yes) setup bids-validator step later use. asked : Location bids-validator program Resource requirements: Defaults BrainGnomes bids-validator 32 GB RAM, 2 hours, 1 core. Additional command lines arguments bids-validator. https://bids-validator.readthedocs.io/en/stable/user_guide/command-line.html details. Additional arguments passed HPC scheduler","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"conclusion","dir":"Articles","previous_headings":"Creating a Project Configuration with setup_project()","what":"Conclusion","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"setup_study completes, write file called project_config.yaml project directory (one exists, prompted whether overwrite ). contain settings can used future load project R existing configuration.","code":""},{"path":[]},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"step-1-setup-your-study","dir":"Articles","previous_headings":"BrainGnomes workflow in a nutshell","what":"Step 1: Setup your study","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"Use setup_project() interactively complete correct configuration entries: say project_config.yaml file project directory.","code":"scfg <- setup_project()"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"step-2-load-your-configuration","dir":"Articles","previous_headings":"","what":"Step 2: Load Your Configuration","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"step results object R workspace called scfg contains project settings. great now, quit R come back later, probably want pick left . can use load_project() load existing configuration:","code":"scfg <- load_project(\"/path/to/my/project\")"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"step-3-edit-configuration","dir":"Articles","previous_headings":"","what":"Step 3: Edit Configuration","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"Use edit_project() menu-driven interface modify parts study configuration. Follow prompts choose edit. useful want change job resources (e.g., memory CPU fMRIPrep) adjust CLI options specific pipeline steps.","code":"scfg <- edit_project(scfg)"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/BrainGnomes_Tutorial_Vignette.html","id":"step-4-run-the-study","dir":"Articles","previous_headings":"","what":"Step 4: Run the Study","title":"BrainGnomes: Study Setup and Execution Tutorial","text":"configuration complete, can run pipeline. default, prompt whether run steps pipeline. also process available subjects sessions defined BIDS directory. want run subset subjects, can use subject_filter argument like: Likewise, want skip menu prompts step run, can use steps argument. example, run postprocessing subjects: available steps \"bids_conversion\", \"mriqc\", \"fmriprep\", \"aroma\", \"postprocess\". Note request step run_project never configured result error.","code":"run_project(scfg) # run subjects 242 and 510 only run_project(scfg, subject_filter=c(\"242\", \"510\")) # run subjects 242 and 510 only run_project(scfg, subject_filter=c(\"242\", \"510\"), steps=\"postprocess\")"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"running-singularity","dir":"Articles","previous_headings":"","what":"Running singularity","title":"BrainGnomes: Building Singularity Containers","text":"HPC systems, Singularity available login nodes. Thus, build containers, must enter interactive compute session build . example, SLURM, 8-hour session 32 GB RAM, use: Now ’re session, can proceed building containers needed BrainGnomes","code":"srun -t 8:00:00 --mem=32gb -p interact -N 1 -n 4  --pty /bin/bash"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"heudiconv","dir":"Articles","previous_headings":"","what":"Heudiconv","title":"BrainGnomes: Building Singularity Containers","text":"details : https://heudiconv.readthedocs.io/en/latest/installation.html","code":"singularity pull docker://nipy/heudiconv:latest"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"fmriprep","dir":"Articles","previous_headings":"","what":"fmriprep","title":"BrainGnomes: Building Singularity Containers","text":"Fill version, 25.1.3","code":"singularity build /proj/hng/software/containers/fmriprep-<version>.simg docker://nipreps/fmriprep:<version>"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"mriqc","dir":"Articles","previous_headings":"","what":"MRIQC","title":"BrainGnomes: Building Singularity Containers","text":"","code":"singularity build /proj/mnhallqlab/mriqc-latest.simg docker://nipreps/mriqc:latest"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"fmripost-aroma-ica-aroma","dir":"Articles","previous_headings":"","what":"fmripost-aroma (ICA-AROMA)","title":"BrainGnomes: Building Singularity Containers","text":"Details: https://github.com/nipreps/fmripost-aroma?tab=readme-ov-file#installation","code":"singularity build /proj/hng/software/containers/aroma-latest.simg docker://nipreps/fmripost-aroma:main"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"afni","dir":"Articles","previous_headings":"","what":"AFNI","title":"BrainGnomes: Building Singularity Containers","text":"currently used, want !","code":"singularity build /proj/hng/software/containers/afni-latest.simg  docker://afni/afni_make_build"},{"path":"https://uncdependlab.github.io/BrainGnomes/articles/building_containers.html","id":"bids-validator","dir":"Articles","previous_headings":"","what":"BIDS-validator","title":"BrainGnomes: Building Singularity Containers","text":"quite easy","code":"module load node npm install -g deno deno compile -ERWN -o bids-validator jsr:@bids/validator"},{"path":"https://uncdependlab.github.io/BrainGnomes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Hallquist. Author, maintainer.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hallquist M (2025). BrainGnomes: R package preprocessing analyzing fMRI data. R package version 0.3, https://uncdependlab.github.io/BrainGnomes/.","code":"@Manual{,   title = {BrainGnomes: An R package for preprocessing and analyzing fMRI data},   author = {Michael Hallquist},   year = {2025},   note = {R package version 0.3},   url = {https://uncdependlab.github.io/BrainGnomes/}, }"},{"path":"https://uncdependlab.github.io/BrainGnomes/index.html","id":"braingnomes","dir":"","previous_headings":"","what":"An R package for preprocessing and analyzing fMRI data","title":"An R package for preprocessing and analyzing fMRI data","text":"R package processing analyzing fMRI data","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/BrainGnomes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BrainGnomes: An R package for preprocessing and analyzing fMRI data — BrainGnomes-package","title":"BrainGnomes: An R package for preprocessing and analyzing fMRI data — BrainGnomes-package","text":"R package handles preprocessing analysis fMRI data HPC clusters.","code":""},{"path":[]},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/BrainGnomes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BrainGnomes: An R package for preprocessing and analyzing fMRI data — BrainGnomes-package","text":"Maintainer: Michael Hallquist michael.hallquist@gmail.com","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/add_tracked_job_parent.html","id":null,"dir":"Reference","previous_headings":"","what":"Add parent/child id relationship to tracking database — add_tracked_job_parent","title":"Add parent/child id relationship to tracking database — add_tracked_job_parent","text":"Add parent/child id relationship tracking database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/add_tracked_job_parent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add parent/child id relationship to tracking database — add_tracked_job_parent","text":"","code":"add_tracked_job_parent(sqlite_db = NULL, job_id = NULL, parent_job_id = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/add_tracked_job_parent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add parent/child id relationship to tracking database — add_tracked_job_parent","text":"sqlite_db Path SQLite database used tracking job_id Job id job add parent parent_job_id Job id parent job job_id","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_aroma.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply AROMA-based denoising to an fMRI image — apply_aroma","title":"Apply AROMA-based denoising to an fMRI image — apply_aroma","text":"Performs non-aggressive ICA-AROMA denoising regressing identified noise components fMRI time series using FSL's fsl_regfilt. Falls back R-based wrapper script standard FSL command fails due dimensionality issues.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_aroma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply AROMA-based denoising to an fMRI image — apply_aroma","text":"","code":"apply_aroma(   in_file,   out_desc = NULL,   mixing_file,   noise_ics,   overwrite = FALSE,   lg = NULL,   use_R = FALSE,   fsl_img = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_aroma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply AROMA-based denoising to an fMRI image — apply_aroma","text":"in_file Path input 4D NIfTI file. out_desc BIDS description field file output step mixing_file Path MELODIC mixing matrix (e.g., *_desc-MELODIC_mixing.tsv). noise_ics Vector ICA components regress (usually pulled relevant aroma_timeseries.tsv file). overwrite Logical; whether overwrite output file exists. lg Optional lgr object used logging messages use_R Logical; TRUE, use R wrapper script (fsl_regfilt.R) instead fsl_regfilt. fsl_img Optional Singularity image execute FSL commands containerized environment.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_aroma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply AROMA-based denoising to an fMRI image — apply_aroma","text":"Path denoised output NIfTI file. required files missing, returns in_file unmodified.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a brain mask to a 4D NIfTI image — apply_mask","title":"Apply a brain mask to a 4D NIfTI image — apply_mask","text":"Multiplies NIfTI image binary mask using FSL's fslmaths -mas zero non-brain voxels. typically used restrict processing brain tissue.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a brain mask to a 4D NIfTI image — apply_mask","text":"","code":"apply_mask(   in_file,   mask_file,   out_desc = NULL,   overwrite = FALSE,   lg = NULL,   fsl_img = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a brain mask to a 4D NIfTI image — apply_mask","text":"in_file Path input 4D NIfTI image. mask_file Path binary mask NIfTI file (dimensions in_file). out_desc BIDS description field file output step overwrite Logical; whether overwrite output file already exists. lg Optional lgr object used logging messages fsl_img Optional path Singularity image execute command container.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/apply_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a brain mask to a 4D NIfTI image — apply_mask","text":"Path masked output NIfTI file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/args_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse command-line arguments into a structured data frame — args_to_df","title":"Parse command-line arguments into a structured data frame — args_to_df","text":"Converts character vector CLI-style arguments data frame fields position, argument name, value, number hyphens, whether argument used equals sign.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/args_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse command-line arguments into a structured data frame — args_to_df","text":"","code":"args_to_df(arg_vec = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/args_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse command-line arguments into a structured data frame — args_to_df","text":"arg_vec character vector shell-style argument strings (e.g., \"--arg=value\" \"--arg value\").","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/args_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse command-line arguments into a structured data frame — args_to_df","text":"data frame one row per parsed argument following columns: argpos index original string input vector. lhs left-hand side argument (name). rhs right-hand side argument (value), NA none found. has_equals Logical; TRUE argument used =, otherwise FALSE. nhyphens number hyphens used argument prefix (1 2).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/args_to_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse command-line arguments into a structured data frame — args_to_df","text":"Supports --arg=value --arg value formats. Multi-token values following key collapsed single space-separated string.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/build_cli_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Command-Line Argument Builder — build_cli_args","title":"Interactive Command-Line Argument Builder — build_cli_args","text":"Provides interactive interface entering, reviewing, editing, deleting command-line arguments. Accepts optional starting list arguments returns modified new set.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/build_cli_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Command-Line Argument Builder — build_cli_args","text":"","code":"build_cli_args(   args = NULL,   prompt = \"> \",   instruct = \"Enter arguments (press Enter to finish): \",   collapse = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/build_cli_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Command-Line Argument Builder — build_cli_args","text":"args Optional character vector existing arguments edit. NULL, new set arguments entered. prompt Prompt string shown new argument line. Defaults \"> \" . instruct Instructional message shown start session. collapse non-NULL, collapses final argument list single string using specified delimiter.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/build_cli_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Command-Line Argument Builder — build_cli_args","text":"character vector CLI arguments, single collapsed string collapse specified.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/build_cli_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Command-Line Argument Builder — build_cli_args","text":"","code":"if (FALSE) { # \\dontrun{ args <- build_cli_args() cat(\"Final arguments:\\n\", paste(args, collapse = \" \"), \"\\n\") } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_4d.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","title":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","text":"function performs voxelwise temporal filtering 4D fMRI image using Butterworth IIR filter (low-pass, high-pass, bandpass).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_4d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","text":"","code":"butterworth_filter_4d(   infile,   tr,   low_hz = NULL,   high_hz = NULL,   outfile = \"\",   internal = FALSE,   order = 2L,   padtype = \"even\",   use_zi = TRUE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_4d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","text":"infile Character string. Path input 4D NIfTI file. tr Numeric. repetition time (TR) seconds. low_hz Numeric NULL. Low cutoff frequency Hz high-pass bandpass filtering. high_hz Numeric NULL. High cutoff frequency Hz low-pass bandpass filtering. outfile Character string. provided, filtered image written file. internal Logical. FALSE (default), returns niftiImage object voxel values; TRUE, returns minimal metadata internal object (see RNifti). order Integer. Filter order (default = 4). padtype Character string. Padding strategy: \"even\", \"odd\", \"constant\", \"zero\". Default \"even\". use_zi Logical. Whether use steady-state initial conditions (default = TRUE).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_4d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","text":"4D NIfTI image, either written outfile returned object.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_4d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","text":"function uses signal package compute IIR filter coefficients, applies zero-phase forward-backward filter voxel using C++ code via Rcpp.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_4d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a Butterworth Filter to a 4D NIfTI Image — butterworth_filter_4d","text":"","code":"if (FALSE) { # \\dontrun{ butterworth_filter_4d(\"bold.nii.gz\", tr = 2, low_hz = 0.01, high_hz = 0.1,                        outfile = \"bold_filtered.nii.gz\") } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Butterworth Filter to 4D NIfTI Image — butterworth_filter_cpp","title":"Apply Butterworth Filter to 4D NIfTI Image — butterworth_filter_cpp","text":"function applies temporal Butterworth filter voxel time series 4D NIfTI image using forward-backward filtering.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Butterworth Filter to 4D NIfTI Image — butterworth_filter_cpp","text":"","code":"butterworth_filter_cpp(   infile,   b,   a,   outfile = \"\",   internal = FALSE,   padtype = \"even\",   padlen = -1L,   use_zi = TRUE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Butterworth Filter to 4D NIfTI Image — butterworth_filter_cpp","text":"infile Character string. Path input 4D NIfTI file. b Numeric vector. Numerator filter coefficients. Numeric vector. Denominator filter coefficients. outfile Character string. Optional path save filtered image. internal Logical. Whether return internal RNifti image object (default = false). padtype String. Padding type: \"even\", \"odd\", \"constant\", \"zero\" (default = \"even\"). use_zi Logical. Whether use steady-state initial conditions (default = true).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/butterworth_filter_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Butterworth Filter to 4D NIfTI Image — butterworth_filter_cpp","text":"4D filtered NIfTI image niftiImage internalImage object.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/cluster_job_submit.html","id":null,"dir":"Reference","previous_headings":"","what":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","title":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","text":"function returns jobid scheduled job.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/cluster_job_submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","text":"","code":"cluster_job_submit(   script,   scheduler = \"slurm\",   sched_args = NULL,   env_variables = NULL,   export_all = FALSE,   echo = TRUE,   fail_on_error = FALSE,   wait_jobs = NULL,   wait_signal = \"afterok\",   repolling_interval = 60,   tracking_sqlite_db = NULL,   tracking_args = list() )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/cluster_job_submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","text":"script script executed scheduler. can contain scheduler directives, case conflicts, directives passed sched_args take precedence. scheduler scheduler use job submission. Options 'qsub', 'torque', 'sbatch', 'slurm', 'sh'. terms 'qsub' 'torque' aliases ('torque' submits via qsub command). Likewise 'sbatch' 'slurm'. scheduler 'sh' submit scheduler , instead executes command immediately via sh. sched_args character vector arguments included scheduling command. TORQUE, typically begin '-l' '-l wall_time=10:00:00'. env_variables named character vector containing environment variables values passed script execution time. handled '-v' directive TORQUE clusters '–export' Slurm clusters. names vector environment variable names values vector environment variable values passed . want propagate current value environment variable compute node runtime, use NA value element env_variables. See examples. export_all Whether export environment variables compute node runtime. Default: FALSE echo Whether echo job submission command terminal time scheduled. Default: TRUE. fail_on_error Whether stop execution script (TRUE), issue warning (FALSE) job submission fails. Defaults FALSE (.e., issue warning). wait_jobs character string jobs process ids complete job executed wait_signal torque slurm clusters, signal indicate parent jobs finished. repolling_interval number seconds wait rechecking job status (used local scheduler) tracking_sqlite_db Path SQLite database used job tracking. provided, job submission metadata recorded, including job dependencies parent-child relationships. tracking_args named list metadata fields track submitted job. may include parent job ID, batch script path, scheduler options. used conjunction tracking_sqlite_db support job tracking.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/cluster_job_submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","text":"character string containing jobid scheduled job.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/cluster_job_submit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","text":"Michael Hallquist","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/cluster_job_submit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function submits a single script to a high-performance cluster using a scheduler (Slurm or TORQUE). It accepts a vector of arguments to be passed to the scheduler and a vector of environment variables that should be passed to the compute node at job execution. — cluster_job_submit","text":"","code":"if (FALSE) { # \\dontrun{   #simple PBS submission   cluster_job_submit('myscript.bash', scheduler=\"torque\",       sched_args=c('-l walltime=10:00:00', '-l nodes=1:ppn=20'),      env_variables=c(RUN_INDEX=2, MODEL_NAME='FSE21'))    #To forward environment variables without explicitly providing values. Note that these must   #  be in R's system environment (cf. Sys.getenv) at execution time to forward as expected.   cluster_job_submit('myscript.sbatch', scheduler=\"slurm\",      sched_args=c('-p general', '-N 1', '-n 12', '--mem=10g', '-t 02-00:00:00'),      env_variables=c(RUN_INDEX=2, R_HOME=NA, JAVA_HOME=NA)) } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compare_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively Compare Two List Objects — compare_lists","title":"Recursively Compare Two List Objects — compare_lists","text":"Compares two list objects prints summary differences structure values.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compare_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively Compare Two List Objects — compare_lists","text":"","code":"compare_lists(old, new, path = \"\", max_diffs = 100)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compare_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively Compare Two List Objects — compare_lists","text":"old First list object. new Second list object. path Internal parameter track location within nested structure (used recursively). max_diffs Maximum number differences report (default: 20).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compare_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively Compare Two List Objects — compare_lists","text":"Invisibly returns TRUE differences found; otherwise FALSE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_brain_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a loose brain mask from functional MRI data using FSL — compute_brain_mask","title":"Compute a loose brain mask from functional MRI data using FSL — compute_brain_mask","text":"Generates brain mask functional image using modified FSL approach based 98-2 percentile intensity method. method combines BET skull-stripping percentile thresholding binary dilation produce conservative mask.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_brain_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a loose brain mask from functional MRI data using FSL — compute_brain_mask","text":"","code":"compute_brain_mask(in_file, lg = NULL, fsl_img = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_brain_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a loose brain mask from functional MRI data using FSL — compute_brain_mask","text":"in_file Path input 4D NIfTI functional image. lg Optional lgr object used logging messages fsl_img Optional Singularity image execute FSL commands containerized environment.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_brain_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a loose brain mask from functional MRI data using FSL — compute_brain_mask","text":"File path computed binary brain mask (yet dilated). dilated version mask also saved _dil1x suffix.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_brain_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a loose brain mask from functional MRI data using FSL — compute_brain_mask","text":"function replicates \"98-2\" heuristic used FSL's featlib.tcl: computes 2nd 98th percentiles skull-stripped mean image thresholds 10% 2nd percentile. final mask formed applying threshold, binarizing, performing one dilation iteration.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_spike_regressors.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute spike regressors for volume censoring — compute_spike_regressors","title":"Compute spike regressors for volume censoring — compute_spike_regressors","text":"Evaluates user-supplied expressions confounds data.frame generate spike (one-hot) regressors. Expressions may optionally include semicolon-separated range volumes also flag (e.g. \"-1:1; framewise_displacement > 0.5\").","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_spike_regressors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute spike regressors for volume censoring — compute_spike_regressors","text":"","code":"compute_spike_regressors(confounds_df = NULL, spike_volume = NULL, lg = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_spike_regressors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute spike regressors for volume censoring — compute_spike_regressors","text":"confounds_df Data frame confounds one row per volume. spike_volume Character vector expressions evaluate. lg Logger object messages.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/compute_spike_regressors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute spike regressors for volume censoring — compute_spike_regressors","text":"Matrix spike regressors NULL none detected.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/confound_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regress confound time series from a 4D fMRI image — confound_regression","title":"Regress confound time series from a 4D fMRI image — confound_regression","text":"Uses FSL's fsl_glm remove nuisance regressors 4D NIfTI image. residuals regression re-centered adding back temporal mean original image.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/confound_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regress confound time series from a 4D fMRI image — confound_regression","text":"","code":"confound_regression(   in_file,   out_desc = NULL,   to_regress = NULL,   censor_file = NULL,   overwrite = FALSE,   lg = NULL,   fsl_img = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/confound_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regress confound time series from a 4D fMRI image — confound_regression","text":"in_file Path input 4D NIfTI file. out_desc BIDS description field file output step to_regress Path text file containing nuisance regressors (one column per regressor). censor_file optional censor file (1s indicate volumes keep) used overwrite Logical; whether overwrite output file already exists. lg Optional lgr object used logging messages fsl_img Optional Singularity image execute FSL commands containerized environment.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/confound_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regress confound time series from a 4D fMRI image — confound_regression","text":"Path residualized output NIfTI file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/confound_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regress confound time series from a 4D fMRI image — confound_regression","text":"regressors converted FSL's binary matrix format using Text2Vest. residuals computed using fsl_glm, temporal mean original image added back preserve baseline signal intensity.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/construct_bids_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct BIDS-Compatible Filenames from Extracted Entity Data — construct_bids_filename","title":"Construct BIDS-Compatible Filenames from Extracted Entity Data — construct_bids_filename","text":"Given data frame BIDS entities (returned extract_bids_info()), function reconstructs filenames following BIDS specification. supports standard BIDS entities including subject, session, task, run, acquisition, space, resolution, description, along suffix file extension.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/construct_bids_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct BIDS-Compatible Filenames from Extracted Entity Data — construct_bids_filename","text":"","code":"construct_bids_filename(bids_df, full.names = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/construct_bids_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct BIDS-Compatible Filenames from Extracted Entity Data — construct_bids_filename","text":"bids_df data.frame containing one rows BIDS entities. Must include least columns suffix ext, optionally: subject, session, task, acquisition, run, modality, echo, direction, reconstruction, hemisphere, space, resolution, description, fieldmap. full.names TRUE, return full path file using $directory field bids_df.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/construct_bids_filename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct BIDS-Compatible Filenames from Extracted Entity Data — construct_bids_filename","text":"character vector reconstructed BIDS filenames, one per row bids_df.","code":""},{"path":[]},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/construct_bids_filename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct BIDS-Compatible Filenames from Extracted Entity Data — construct_bids_filename","text":"","code":"df <- data.frame(   subject = \"01\", task = \"rest\", space = \"MNI152NLin6Asym\",   resolution = \"2\", description = \"preproc\", suffix = \"bold\", ext = \".nii.gz\",   stringsAsFactors = FALSE ) construct_bids_filename(df) #> [1] \"sub-01_task-rest_space-MNI152NLin6Asym_res-2_desc-preproc_bold.nii.gz\" # Returns: \"sub-01_task-rest_space-MNI152NLin6Asym_res-2_desc-preproc_bold.nii.gz\""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/create_tracking_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to create the tracking SQLite database — create_tracking_db","title":"Internal helper function to create the tracking SQLite database — create_tracking_db","text":"Internal helper function create tracking SQLite database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/create_tracking_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to create the tracking SQLite database — create_tracking_db","text":"","code":"create_tracking_db(sqlite_db)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/create_tracking_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to create the tracking SQLite database — create_tracking_db","text":"sqlite_db Path SQLite database used tracking","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/edit_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively edit a study configuration by field (field-guided) — edit_project","title":"Interactively edit a study configuration by field (field-guided) — edit_project","text":"Allows user interactively browse edit individual fields within configuration object, grouped domain. Field paths defined within function avoid relying complete scfg structure.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/edit_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively edit a study configuration by field (field-guided) — edit_project","text":"","code":"edit_project(input = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/edit_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively edit a study configuration by field (field-guided) — edit_project","text":"input bg_project_cfg object, YAML file path, project directory containing project_config.yaml. directory provided file absent, edit_project stop. argument NULL.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/edit_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactively edit a study configuration by field (field-guided) — edit_project","text":"updated bg_project_cfg object. updated configuration written project_config.yaml project directory unless user chooses overwrite existing file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_bids_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fields from BIDS filenames — extract_bids_info","title":"Extract fields from BIDS filenames — extract_bids_info","text":"Extract fields BIDS filenames","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_bids_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fields from BIDS filenames — extract_bids_info","text":"","code":"extract_bids_info(filenames, drop_unused = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_bids_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fields from BIDS filenames — extract_bids_info","text":"filenames character vector BIDS file names (paths). drop_unused Logical; TRUE, drop BIDS entities present filenames.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_bids_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fields from BIDS filenames — extract_bids_info","text":"data.frame containing BIDS key-value fields extracted filename (row corresponds input filename).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_bids_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract fields from BIDS filenames — extract_bids_info","text":"Based BIDS specification file naming (see BIDS documentation appendix entities). detail, see: https://bids-specification.readthedocs.io/en/stable/appendices/entities.html function recognizes standard BIDS entities subject (sub-), session (ses-), task (task-), acquisition (acq-), run, modality (mod-), echo (echo-), direction (dir-), reconstruction (rec-), hemisphere (hemi-), space (space-), resolution (res-), description (desc-), fieldmap (fmap-), well file suffix extension.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_bids_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fields from BIDS filenames — extract_bids_info","text":"","code":"filenames <- c(   \"sub-01_ses-02_task-memory_space-MNI2009c_acq-highres_desc-preproc_bold.nii.gz\",   \"acq-lowres_desc-smoothed_sub-02_task-attention_run-2_bold.nii.gz\",   \"sub-03_space-MNI152NLin6Asym_task-motor_desc-raw_echo-2_dir-PA_bold.nii.gz\" ) extract_bids_info(filenames) #>   subject session      task acquisition  run modality echo direction #> 1      01      02    memory     highres <NA>       NA <NA>      <NA> #> 2      02    <NA> attention      lowres    2       NA <NA>      <NA> #> 3      03    <NA>     motor        <NA> <NA>       NA    2        PA #>   reconstruction hemisphere           space resolution description fieldmap #> 1             NA         NA        MNI2009c         NA     preproc       NA #> 2             NA         NA            <NA>         NA    smoothed       NA #> 3             NA         NA MNI152NLin6Asym         NA         raw       NA #>   suffix     ext directory #> 1   bold .nii.gz         . #> 2   bold .nii.gz         . #> 3   bold .nii.gz         ."},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_capturing_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to extract capturing groups from a string — extract_capturing_groups","title":"helper function to extract capturing groups from a string — extract_capturing_groups","text":"helper function extract capturing groups string","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_capturing_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to extract capturing groups from a string — extract_capturing_groups","text":"","code":"extract_capturing_groups(strings, pattern, groups = NULL, sep = \"_\", ...)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_capturing_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to extract capturing groups from a string — extract_capturing_groups","text":"strings character vector containing strings processed pattern regex pattern match strings groups numeric vector specifying indices capturing groups extracted. Default: NULL, extracts capturing groups. sep character string separate captured groups. Default: \"_\". ... additional arguments passed regexec (e.g., perl = TRUE)","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_capturing_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to extract capturing groups from a string — extract_capturing_groups","text":"character vector containing captured groups","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/extract_capturing_groups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function to extract capturing groups from a string — extract_capturing_groups","text":"function uses regexec regmatches functions extract capturing groups strings. function returns character vector containing captured groups. matches found, NA returned.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/file_sans_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"internal function for returning a neuroimaging file (and path) without its extension at present, it returns NA if no recognized extension is there — file_sans_ext","title":"internal function for returning a neuroimaging file (and path) without its extension at present, it returns NA if no recognized extension is there — file_sans_ext","text":"internal function returning neuroimaging file (path) without extension present, returns NA recognized extension ","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/file_sans_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal function for returning a neuroimaging file (and path) without its extension at present, it returns NA if no recognized extension is there — file_sans_ext","text":"","code":"file_sans_ext(file)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/filtfilt_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-Phase IIR Filtering via Forward and Reverse Filtering — filtfilt_cpp","title":"Zero-Phase IIR Filtering via Forward and Reverse Filtering — filtfilt_cpp","text":"Applies IIR filter 1D numeric signal using forward backward passes eliminate phase distortions, similar scipy.signal.filtfilt. function implements pure C++ version using Direct Form II Transposed structure, including optional initial condition handling via steady-state initialization.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/filtfilt_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-Phase IIR Filtering via Forward and Reverse Filtering — filtfilt_cpp","text":"x numeric vector representing input time series. b numeric vector numerator (feedforward) filter coefficients. numeric vector denominator (feedback) filter coefficients. Must [0] == 1.0. padlen Number samples extend edge padding. -1 (default), uses 3 * max(length(), length(b)). padtype Type padding signal boundaries. One \"constant\" (default), \"odd\", \"even\", \"zero\". use_zi Logical. TRUE (default), use steady-state initial conditions minimize transients.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/filtfilt_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero-Phase IIR Filtering via Forward and Reverse Filtering — filtfilt_cpp","text":"numeric vector length x, containing filtered signal.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/filtfilt_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zero-Phase IIR Filtering via Forward and Reverse Filtering — filtfilt_cpp","text":"function applies IIR filter forward direction, reverses result, applies filter , reverses final output. approach removes phase delay. Padding used minimize edge artifacts, filter state optionally initialized values derived steady-state step response filter (lfilter_zi_arma()).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/filtfilt_cpp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Zero-Phase IIR Filtering via Forward and Reverse Filtering — filtfilt_cpp","text":"Scipy Signal Documentation: https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.filtfilt.html Gustafsson, F. (1996). Determining initial states forward-backward filtering. IEEE Transactions Signal Processing.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_fmriprep_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","title":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","text":"Given path preprocessed NIfTI file fMRIPrep fMRIPost, function identifies returns associated derivative files directory. includes corresponding brain mask, confound regressors, ICA-AROMA melodic mixing matrix, AROMA classification metrics, list rejected noise components (available).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_fmriprep_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","text":"","code":"get_fmriprep_outputs(in_file)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_fmriprep_outputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","text":"in_file character string giving path preprocessed NIfTI .nii.gz file generated fMRIPrep (e.g., suffix _desc-preproc_bold.nii.gz).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_fmriprep_outputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","text":"named list containing following elements: bold input BOLD file path (returned found). brain_mask corresponding brain mask file (NULL found). confounds path confounds .tsv file (NULL). melodic_mix Path melodic mixing matrix ICA-AROMA (present). aroma_metrics Path AROMA classification metrics file (present). noise_ics vector rejected ICA components based AROMA classification (NULL). prefix string encoding core BIDS identifier used construct expected filenames.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_fmriprep_outputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","text":"function assumes filenames follow BIDS Derivatives conventions uses extracted BIDS entities reconstruct expected filenames via construct_bids_filename(). function checks two possible confounds files (desc-confounds_timeseries.tsv desc-confounds_regressors.tsv), attempts resolve AROMA-rejected ICs AROMA classification metrics file (_desc-aroma_metrics.tsv) present.","code":""},{"path":[]},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_fmriprep_outputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify fMRIPrep-Derived Outputs for a NIfTI File — get_fmriprep_outputs","text":"","code":"if (FALSE) { # \\dontrun{ f <- \"/path/to/sub-01_task-rest_space-MNI152NLin6Asym_desc-preproc_bold.nii.gz\" outputs <- get_fmriprep_outputs(f) outputs$brain_mask } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_image_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an intensity quantile from a NIfTI image — get_image_quantile","title":"Compute an intensity quantile from a NIfTI image — get_image_quantile","text":"Uses FSL's fslstats compute specified intensity quantile NIfTI image, optionally restricted brain mask excluding zero-valued voxels.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_image_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an intensity quantile from a NIfTI image — get_image_quantile","text":"","code":"get_image_quantile(   in_file,   brain_mask = NULL,   quantile = 50,   exclude_zero = FALSE,   log_file = NULL,   fsl_img = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_image_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an intensity quantile from a NIfTI image — get_image_quantile","text":"in_file Path input NIfTI image file. brain_mask Optional path binary brain mask image. provided, quantiles computed within masked region. quantile Numeric value 0 100 indicating desired quantile (e.g., 50 median). exclude_zero Logical; TRUE, exclude zero-valued voxels computation. log_file Optional file path capture FSL command output. fsl_img Optional Singularity image execute FSL commands containerized environment.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_image_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an intensity quantile from a NIfTI image — get_image_quantile","text":"single numeric value representing requested intensity quantile.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_nested_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to allow a nested list to be traversed using a key string supporting nesting — get_nested_values","title":"Helper function to allow a nested list to be traversed using a key string supporting nesting — get_nested_values","text":"Helper function allow nested list traversed using key string supporting nesting","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_nested_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to allow a nested list to be traversed using a key string supporting nesting — get_nested_values","text":"","code":"get_nested_values(lst, key_strings, sep = \"/\", simplify = TRUE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_nested_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to allow a nested list to be traversed using a key string supporting nesting — get_nested_values","text":"lst list traversed key_strings character vector keys traverse list. key string single string keys separated separator (default \"/\"). example, \"parent/child/grandchild\" correspond my_list$parent$child$grandchild sep character string separate keys key strings. Default \"/\" simplify Logical; whether simplify output vector (possible). Default TRUE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_nested_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to allow a nested list to be traversed using a key string supporting nesting — get_nested_values","text":"named list values corresponding keys key strings","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","title":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","text":"Helper function obtain subject session directories root folder","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","text":"","code":"get_subject_dirs(   root = NULL,   sub_regex = \"[0-9]+\",   sub_id_match = \"([0-9]+)\",   ses_regex = NULL,   ses_id_match = \"([0-9]+)\",   full.names = FALSE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","text":"root path root folder containing subject folders. sub_regex regex pattern match subject folders. Default: \"[0-9]+\". sub_id_match regex pattern extracting subject ID subject folder name. Default: \"([0-9]+)\". ses_regex regex pattern match session folders. Default: NULL. NULL, session folders expected. ses_id_match regex pattern extracting session ID session folder name. Default: \"([0-9]+)\". full.names TRUE, return absolute paths folders; FALSE, return paths relative root. Default: FALSE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_dirs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","text":"data frame one row per subject (per subject-session combination) columns: sub_id: Subject ID extracted folder name. ses_id: Session ID (NA session level). sub_dir: Path subject folder. ses_dir: Path session folder (NA session).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_dirs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","text":"function used find subject folders within root folder. used internally package find subject DICOM BIDS folders processing. function uses list.dirs function list directories within folder filters directories based regex patterns provided. function returns character vector subject folders found. function also extracts subject session IDs folder names using regex patterns provided. IDs extracted using extract_capturing_groups function, uses regexec regmatches functions extract capturing groups folder names. function returns data frame subject session IDs corresponding folder paths.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_dirs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to obtain all subject and session directories from a root folder — get_subject_dirs","text":"","code":"if (FALSE) { # \\dontrun{   get_subject_dirs(root = \"/path/to/root\", sub_regex = \"[0-9]+\", sub_id_match = \"([0-9]+)\",                    ses_regex = \"ses-[0-9]+\", ses_id_match = \"([0-9]+)\", full.names = TRUE) } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"This function returns an lgr object corresponding to logging for a single subject directory — get_subject_logger","title":"This function returns an lgr object corresponding to logging for a single subject directory — get_subject_logger","text":"function returns lgr object corresponding logging single subject directory","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function returns an lgr object corresponding to logging for a single subject directory — get_subject_logger","text":"","code":"get_subject_logger(scfg, sub_id)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function returns an lgr object corresponding to logging for a single subject directory — get_subject_logger","text":"scfg study configuration object sub_id id subject whose logger wish access","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_subject_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function returns an lgr object corresponding to logging for a single subject directory — get_subject_logger","text":"configured lgr object logging subject processing messages","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_tracked_job_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Query job status in tracking SQLite database — get_tracked_job_status","title":"Query job status in tracking SQLite database — get_tracked_job_status","text":"Query job status tracking SQLite database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_tracked_job_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query job status in tracking SQLite database — get_tracked_job_status","text":"","code":"get_tracked_job_status(   job_id = NULL,   return_children = FALSE,   return_parent = FALSE,   sqlite_db )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_tracked_job_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query job status in tracking SQLite database — get_tracked_job_status","text":"job_id job id retreive status return_children Return child jobs job return_parent Return parent jobs job sqlite_db Character string sqlite database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/get_tracked_job_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query job status in tracking SQLite database — get_tracked_job_status","text":"R data.frame version tracking database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/hours_to_dhms.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a number of hours to a days, hours, minutes, seconds format — hours_to_dhms","title":"convert a number of hours to a days, hours, minutes, seconds format — hours_to_dhms","text":"convert number hours days, hours, minutes, seconds format","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/hours_to_dhms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a number of hours to a days, hours, minutes, seconds format — hours_to_dhms","text":"","code":"hours_to_dhms(hours, frac = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/hours_to_dhms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert a number of hours to a days, hours, minutes, seconds format — hours_to_dhms","text":"REDUNDANT fmri.pipeline","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_df_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to insert a keyed data.frame into the sqlite storage database — insert_df_sqlite","title":"helper function to insert a keyed data.frame into the sqlite storage database — insert_df_sqlite","text":"helper function insert keyed data.frame sqlite storage database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_df_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to insert a keyed data.frame into the sqlite storage database — insert_df_sqlite","text":"","code":"insert_df_sqlite(   gpa = NULL,   id = NULL,   session = NULL,   run_number = NULL,   data = NULL,   table = NULL,   delete_extant = TRUE,   append = TRUE,   overwrite = FALSE,   immediate = FALSE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_df_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to insert a keyed data.frame into the sqlite storage database — insert_df_sqlite","text":"gpa glm_pipeline_arguments object used lookup location SQLite database insert id id subject data belong session session data run_number run_number data data data.frame containing data inserted sqlite db table character string table name modified delete_extant Whether delete existing records id + session + run_number combination append Whether append records table (passed dbWriteTable) overwrite Whether overwrite existing table (passed dbWriteTable) immediate Whether open unique connection, commit transaction, close connection. useful SQLite concurrency issues parallel compute environment, present still getting errors even immediate approach.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_df_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to insert a keyed data.frame into the sqlite storage database — insert_df_sqlite","text":"TRUE/FALSE indicating whether record successfully inserted","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_tracked_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper funciton to insert a job into the tracking SQLite database — insert_tracked_job","title":"Internal helper funciton to insert a job into the tracking SQLite database — insert_tracked_job","text":"Internal helper funciton insert job tracking SQLite database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_tracked_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper funciton to insert a job into the tracking SQLite database — insert_tracked_job","text":"","code":"insert_tracked_job(sqlite_db, job_id, tracking_args = list())"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/insert_tracked_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper funciton to insert a job into the tracking SQLite database — insert_tracked_job","text":"sqlite_db Path SQLite database used tracking","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/intensity_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize global intensity of a 4D fMRI image — intensity_normalize","title":"Normalize global intensity of a 4D fMRI image — intensity_normalize","text":"Rescales intensity 4D NIfTI image median voxel intensity within brain mask matches specified global target. operation commonly used standardize signal across runs subjects.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/intensity_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize global intensity of a 4D fMRI image — intensity_normalize","text":"","code":"intensity_normalize(   in_file,   out_desc = NULL,   brain_mask = NULL,   global_median = 10000,   overwrite = FALSE,   lg = NULL,   fsl_img = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/intensity_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize global intensity of a 4D fMRI image — intensity_normalize","text":"in_file Path input 4D NIfTI file. out_desc BIDS description field file output step brain_mask Optional path brain mask NIfTI file. NULL, entire image used. global_median Target median intensity value normalize (default 10000). overwrite Logical; whether overwrite output file exists. lg Optional lgr object used logging messages fsl_img Optional Singularity image execute FSL commands containerized environment.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/intensity_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize global intensity of a 4D fMRI image — intensity_normalize","text":"Path intensity-normalized output NIfTI file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/intensity_normalize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize global intensity of a 4D fMRI image — intensity_normalize","text":"50th percentile intensity estimated using fslstats, input image rescaled using fslmaths -mul. output file exists overwrite = FALSE, step skipped.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/is_step_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a pipeline step is complete — is_step_complete","title":"Check whether a pipeline step is complete — is_step_complete","text":"Determines expected output directory .complete marker present given subject/session processing step.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/is_step_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a pipeline step is complete — is_step_complete","text":"","code":"is_step_complete(scfg, sub_id, ses_id = NULL, step_name, pp_stream = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/is_step_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a pipeline step is complete — is_step_complete","text":"scfg Study configuration list sub_id Subject identifier ses_id Optional session identifier step_name Name processing step pp_stream Name postprocessing stream step_name \"postprocess\"","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/is_step_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a pipeline step is complete — is_step_complete","text":"List containing complete (logical), dir, complete_file","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/lmfit_residuals_4d.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","title":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","text":"function performs voxelwise confound regression fitting linear model subset timepoints (e.g., uncensored volumes) voxel 4D NIfTI image. fitted model applied timepoints obtain predicted values, residuals returned cleaned 4D image.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/lmfit_residuals_4d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","text":"infile Path 4D NIfTI image file denoise (e.g., functional data). X numeric matrix rows correspond timepoints columns nuisance regressors. Typically includes motion parameters, physiological noise, etc. include_rows Logical vector indicating timepoints include model fitting (e.g., uncensored). Must length number timepoints image number rows X. add_intercept Logical; TRUE, adds intercept column design matrix unless one already present. outfile Optional path write output residuals image. empty, file written. internal Logical; TRUE, returns internal RNifti pointer. Otherwise returns R array. preserve_mean Logical; TRUE, constant time series left unchanged (demeaned recentered). set_mean Optional numeric value; specified, residual time series shifted mean (default 0). used combination preserve_mean = TRUE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/lmfit_residuals_4d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","text":"residualized 4D NIfTI image, either -memory array RNifti object (internal = TRUE).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/lmfit_residuals_4d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","text":"approach mirrors strategy used XCP-D pipeline, nuisance regressors fit valid (non-censored) timepoints prevent bias, resulting model applied full dataset including censored timepoints (e.g., continuity interpolation). Constant columns design matrix automatically removed. intercept column (ones) present, preserved; otherwise, intercept added add_intercept = TRUE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/lmfit_residuals_4d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","text":"Ciric, R. et al. (2018). Mitigating head motion artifact functional connectivity MRI. Nature Protocols. https://xcp-d.readthedocs.io/en/latest/ https://dannyjameswilliams.co.uk/portfolios/sc2/rcpp/","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/lmfit_residuals_4d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Confound Regression to 4D fMRI Data Using Voxelwise Linear Models — lmfit_residuals_4d","text":"","code":"if (FALSE) { # \\dontrun{   X <- cbind(1, motion_params, compcor)   residual_img <- lmfit_residuals_4d(     infile = \"func.nii.gz\",     X = X,     include_rows = !censor_vector,     add_intercept = TRUE,     outfile = \"residual.nii.gz\",     set_mean = 1000   ) } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/load_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a study configuration from a file — load_project","title":"Load a study configuration from a file — load_project","text":"Load study configuration file","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/load_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a study configuration from a file — load_project","text":"","code":"load_project(input = NULL, validate = TRUE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/load_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a study configuration from a file — load_project","text":"input path YAML file, project directory containing project_config.yaml. validate Logical indicating whether validate configuration loading. Default: TRUE","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/load_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a study configuration from a file — load_project","text":"list representing study configuration (class \"bg_project_cfg\"). validate TRUE, returned object validated (missing fields may set NULL noted).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/manage_postprocess_streams.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive menu for managing postprocessing streams — manage_postprocess_streams","title":"Interactive menu for managing postprocessing streams — manage_postprocess_streams","text":"Presents options add, edit, delete, show, finish editing postprocessing streams. Used setup_postprocess_streams() edit_project().","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/manage_postprocess_streams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive menu for managing postprocessing streams — manage_postprocess_streams","text":"","code":"manage_postprocess_streams(scfg, allow_empty = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/manage_postprocess_streams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive menu for managing postprocessing streams — manage_postprocess_streams","text":"scfg study configuration object, produced setup_project(). allow_empty Logical indicating whether finishing zero streams permitted without confirmation.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/manage_postprocess_streams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive menu for managing postprocessing streams — manage_postprocess_streams","text":"Modified scfg updated postprocessing streams","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/mat_to_nii.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a matrix to a 4D NIfTI image — mat_to_nii","title":"Convert a matrix to a 4D NIfTI image — mat_to_nii","text":"Writes numeric matrix (e.g., confound regressors) 4D NIfTI file singleton y z dimensions, suitable processing FSL tools. column becomes voxel x dimension, row corresponds time point (t dimension).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/mat_to_nii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a matrix to a 4D NIfTI image — mat_to_nii","text":"","code":"mat_to_nii(mat, ni_out = \"mat\")"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/mat_to_nii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a matrix to a 4D NIfTI image — mat_to_nii","text":"mat numeric matrix data frame dimensions time x variables. ni_out Output filename (without extension) resulting NIfTI image.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/mat_to_nii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a matrix to a 4D NIfTI image — mat_to_nii","text":"function invisibly returns NULL. NIfTI file written ni_out.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/mat_to_nii.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a matrix to a 4D NIfTI image — mat_to_nii","text":"Missing values replaced zero.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_4d.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate fMRI Time Series with Cubic Splines in a NIfTI File — natural_spline_4d","title":"Interpolate fMRI Time Series with Cubic Splines in a NIfTI File — natural_spline_4d","text":"function performs voxelwise natural cubic spline interpolation time dimension 4D NIfTI image. Timepoints interpolate specified, interpolation applied independently voxel's time series.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_4d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate fMRI Time Series with Cubic Splines in a NIfTI File — natural_spline_4d","text":"infile Character string. Path input 4D NIfTI file (e.g., BOLD fMRI data). t_interpolate Integer vector (1-based). Specifies timepoints (TRs) interpolate. Timepoints outside valid range [1, T] ignored warning. edge_nn Logical. TRUE, extrapolated values edges time series filled using nearest-neighbor extrapolation instead cubic splines. outfile Character string (optional). provided, interpolated image written path. omitted, result returned saved. internal Logical. FALSE (default), array class \"niftiImage\", containing image pixel voxel values, returned. TRUE, return value object class \"internalImage\", contains minimal metadata image. Either way, return value attribute points C data structure containing full image. Cf. RNifti::readNifti","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_4d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate fMRI Time Series with Cubic Splines in a NIfTI File — natural_spline_4d","text":"niftiImage object dimensions metadata input, interpolated values inserted specified timepoints.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_4d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolate fMRI Time Series with Cubic Splines in a NIfTI File — natural_spline_4d","text":"function reads NIfTI image disk, performs interpolation memory, optionally writes result back new NIfTI file. interpolation voxelwise assumes column-major order. voxel time series fewer three valid (non-interpolated) timepoints, constant across time, skipped. Linear extrapolation used timepoints outside valid range edge_nn = FALSE, matching R's splinefun approach natural splines. edge_nn = TRUE, nearest-neighbor extrapolation used interpolation timepoints beginning end timeseries, potentially reducing extreme values extrapolation. implementation uses RNifti's C++ API (NiftiImage, NiftiImageData) efficient memory access file handling, allowing function operate directly NIfTI files.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_4d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate fMRI Time Series with Cubic Splines in a NIfTI File — natural_spline_4d","text":"","code":"if (FALSE) { # \\dontrun{ out_img <- natural_spline_4d(   infile = \"bold.nii.gz\",   t_interpolate = 91:95,   outfile = \"bold_interpolated.nii.gz\",   edge_nn = TRUE ) } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Cubic spline interpolation with natural spline and linear extrapolation — natural_spline_interp","title":"Cubic spline interpolation with natural spline and linear extrapolation — natural_spline_interp","text":"Performs natural cubic spline interpolation given input values. function takes known data points (x, y) evaluates cubic spline interpolation specified output points xout. uses natural spline formulation zero second derivatives endpoints.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cubic spline interpolation with natural spline and linear extrapolation — natural_spline_interp","text":"x numeric vector strictly increasing x-values (time position). y numeric vector y-values x (length x). xout numeric vector points interpolate.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cubic spline interpolation with natural spline and linear extrapolation — natural_spline_interp","text":"numeric vector interpolated y-values point xout.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_interp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cubic spline interpolation with natural spline and linear extrapolation — natural_spline_interp","text":"function performs cubic spline interpolation using tridiagonal system solve spline coefficients. xout values fall outside x range, function uses linear extrapolation, mirror R's splinefun method = \"natural\"","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/natural_spline_interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cubic spline interpolation with natural spline and linear extrapolation — natural_spline_interp","text":"","code":"x <- c(0, 1, 2, 3, 4)   y <- c(0, 1, 0, 1, 0)   xout <- seq(0, 4, by = 0.1)   natural_spline_interp(x, y, xout) #>  [1] 0.00000000 0.17071429 0.33714286 0.49500000 0.64000000 0.76785714 #>  [7] 0.87428571 0.95500000 1.00571429 1.02214286 1.00000000 0.93728571 #> [13] 0.84114286 0.72100000 0.58628571 0.44642857 0.31085714 0.18900000 #> [19] 0.09028571 0.02414286 0.00000000 0.02414286 0.09028571 0.18900000 #> [25] 0.31085714 0.44642857 0.58628571 0.72100000 0.84114286 0.93728571 #> [31] 1.00000000 1.02214286 1.00571429 0.95500000 0.87428571 0.76785714 #> [37] 0.64000000 0.49500000 0.33714286 0.17071429 0.00000000"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nested_list_to_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a nested list into CLI-style arguments using slash-separated keys — nested_list_to_args","title":"Convert a nested list into CLI-style arguments using slash-separated keys — nested_list_to_args","text":"Recursively traverses nested list returns character vector string arguments like --/b=10 --c=25.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nested_list_to_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a nested list into CLI-style arguments using slash-separated keys — nested_list_to_args","text":"","code":"nested_list_to_args(lst, sep = \"/\", collapse = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nested_list_to_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a nested list into CLI-style arguments using slash-separated keys — nested_list_to_args","text":"lst named (possibly nested) list. sep Separator used nested keys (default \"/\"). collapse Logical; TRUE, returns single space-separated string.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nested_list_to_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a nested list into CLI-style arguments using slash-separated keys — nested_list_to_args","text":"character vector (single string collapse = TRUE) CLI-style arguments.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nested_list_to_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a nested list into CLI-style arguments using slash-separated keys — nested_list_to_args","text":"","code":"if (FALSE) { # \\dontrun{    nested_list_to_args(list(a = list(b = c(10, 11, 12)), c = 25)) } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nii_to_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a 4D NIfTI image to a matrix — nii_to_mat","title":"Convert a 4D NIfTI image to a matrix — nii_to_mat","text":"Reads 4D NIfTI file (singleton y z dimensions) converts matrix dimensions time x variables. inverse mat_to_nii().","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nii_to_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a 4D NIfTI image to a matrix — nii_to_mat","text":"","code":"nii_to_mat(ni_in)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nii_to_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a 4D NIfTI image to a matrix — nii_to_mat","text":"ni_in Path NIfTI file x dimension encodes variables 4th (time) dimension encodes observations.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nii_to_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a 4D NIfTI image to a matrix — nii_to_mat","text":"numeric matrix dimension time x variables.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/nii_to_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a 4D NIfTI image to a matrix — nii_to_mat","text":"Assumes input image shape [x, 1, 1, time] produced mat_to_nii().","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/out_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Existence of a BIDS-Formatted Output File with a given description — out_file_exists","title":"Check for Existence of a BIDS-Formatted Output File with a given description — out_file_exists","text":"function constructs BIDS-compliant filename based input file, replacing desc field specified description, checks whether corresponding output file already exists. file exists overwrite = FALSE, function returns skip = TRUE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/out_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Existence of a BIDS-Formatted Output File with a given description — out_file_exists","text":"","code":"out_file_exists(in_file, description, overwrite = TRUE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/out_file_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Existence of a BIDS-Formatted Output File with a given description — out_file_exists","text":"in_file Path input BIDS file (e.g., preprocessed BOLD image). description Character string use new desc field expected output file. overwrite Logical. FALSE, existing files overwritten.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/out_file_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Existence of a BIDS-Formatted Output File with a given description — out_file_exists","text":"list elements: out_file Path expected output file. skip Logical indicating whether skip writing due file existence.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/parse_cli_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse CLI-style arguments into a nested list using args_to_df() — parse_cli_args","title":"Parse CLI-style arguments into a nested list using args_to_df() — parse_cli_args","text":"function tokenizes command-line arguments using args_to_df() builds nested list interpreting forward slashes keys (e.g., --/b=10 11) nested structure.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/parse_cli_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse CLI-style arguments into a nested list using args_to_df() — parse_cli_args","text":"","code":"parse_cli_args(args, sep = \"/\", type_values = TRUE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/parse_cli_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse CLI-style arguments into a nested list using args_to_df() — parse_cli_args","text":"args character vector (e.g., commandArgs(trailingOnly = TRUE)). sep character used separate nested keys. Default \"/\". type_values Logical; whether attempt conver right-hand side strings relevant data types using type.convert.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/parse_cli_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse CLI-style arguments into a nested list using args_to_df() — parse_cli_args","text":"nested list parsed CLI arguments.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/populate_list_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to update tracker_args object — populate_list_arg","title":"Internal helper function to update tracker_args object — populate_list_arg","text":"Internal helper function update tracker_args object","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/populate_list_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to update tracker_args object — populate_list_arg","text":"","code":"populate_list_arg(list_to_populate, arg_name, new_value = NULL, append = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/populate_list_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to update tracker_args object — populate_list_arg","text":"list_to_populate list whose argument populated/updated arg_name named list element update new_value new value update element append TRUE, appends new value current value using paste function. Default: FALSE","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_confounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess confounds to match fMRI operations — postprocess_confounds","title":"Postprocess confounds to match fMRI operations — postprocess_confounds","text":"Handles optional spike regression file creation, filtering confound time series writing postprocessed confounds/regressor files. used internally postprocess_subject().","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_confounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess confounds to match fMRI operations — postprocess_confounds","text":"","code":"postprocess_confounds(   proc_files,   cfg,   processing_sequence,   output_bids_info,   fsl_img = NULL,   lg = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_confounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess confounds to match fMRI operations — postprocess_confounds","text":"proc_files List files returned get_fmriprep_outputs(). cfg Configuration list passed postprocess_subject. processing_sequence Character vector enabled processing steps. output_bids_info Named list BIDS entities postprocessed output file fsl_img Optional path Singularity image FSL installed. lg Logger object messages.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_confounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocess confounds to match fMRI operations — postprocess_confounds","text":"Path nuisance regressor file NULL created.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess a single fMRI BOLD image using a configured pipeline — postprocess_subject","title":"Postprocess a single fMRI BOLD image using a configured pipeline — postprocess_subject","text":"Applies sequence postprocessing operations single subject-level BOLD NIfTI file, specified user-defined configuration object. Operations may include brain masking, spatial smoothing, ICA-AROMA denoising, temporal filtering, confound regression, intensity normalization. function also optionally computes saves filtered confounds file downstream analyses.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess a single fMRI BOLD image using a configured pipeline — postprocess_subject","text":"","code":"postprocess_subject(in_file, cfg = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess a single fMRI BOLD image using a configured pipeline — postprocess_subject","text":"in_file Path subject-level BOLD NIfTI file output fMRIPrep. cfg list containing configuration options, including TR (cfg$tr), enabled processing steps (cfg$<step>$enable), logging (cfg$log_file), paths resources brain masks singularity images (cfg$fsl_img, cfg$brain_mask).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocess a single fMRI BOLD image using a configured pipeline — postprocess_subject","text":"path final postprocessed BOLD NIfTI file. Side effects include writing confounds TSV file (enabled), logging subject-level log file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/postprocess_subject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Postprocess a single fMRI BOLD image using a configured pipeline — postprocess_subject","text":"processing sequence can enforced user (force_processing_order = TRUE) determined dynamically based enable flags configuration. Intermediate NIfTI confound files may deleted save disk space, depending keep_intermediates setting. Logging handled via lgr package directed subject-specific log files inferred BIDS metadata. Required cfg entries: tr: Repetition time seconds. bids_desc: BIDS-compliant desc label output filename. processing_steps: Optional character vector specifying processing order (force_processing_order = TRUE). Optional steps controlled cfg$<step>$enable: apply_mask spatial_smooth apply_aroma temporal_filter confound_regression intensity_normalize","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/process_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess a single subject — process_subject","title":"Preprocess a single subject — process_subject","text":"Preprocess single subject","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/process_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess a single subject — process_subject","text":"","code":"process_subject(scfg, sub_cfg = NULL, steps = NULL, postprocess_streams = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/process_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess a single subject — process_subject","text":"scfg list configuration settings sub_cfg data.frame subject configuration settings steps named logical vector indicating steps run postprocess_streams Optional character vector postprocess configuration names run. NULL, available streams run.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/process_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess a single subject — process_subject","text":"logical value indicating whether preprocessing successful","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/prompt_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain user input from the console — prompt_input","title":"Obtain user input from the console — prompt_input","text":"Obtain user input console","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/prompt_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain user input from the console — prompt_input","text":"","code":"prompt_input(   prompt = \"\",   prompt_eol = \">\",   instruct = NULL,   type = \"character\",   lower = -Inf,   upper = Inf,   len = NULL,   min.len = NULL,   max.len = NULL,   split = NULL,   among = NULL,   required = TRUE,   uniq = FALSE,   default = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/prompt_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain user input from the console — prompt_input","text":"prompt character string display user input prompt (e.g., \"Enter location\"). prompt_eol character string place end prompt (e.g., \">\"). instruct Instructions display prompt (character string, NULL none). type expected type input. Must one \"numeric\", \"integer\", \"character\", \"file\", \"flag\". lower numeric inputs, lowest valid value. upper numeric inputs, highest valid value. len number expected values return. NULL, number values allowed. min.len minimum number values required (applicable). max.len maximum number values allowed (applicable). split Characters split input string multiple values (used multiple values expected). among vector valid values input must match (NULL restriction). required TRUE, user must provide value; FALSE, pressing Enter yields empty/default value. uniq TRUE, entries must unique. default default value use user presses Enter without typing anything. non-NULL, prompt show default choice.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/prompt_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain user input from the console — prompt_input","text":"user input, converted appropriate type (numeric, integer, character, etc.), default provided input given.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/prompt_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain user input from the console — prompt_input","text":"function keep prompting user valid input provided. displays instructions enforces constraints (e.g., value range, length, uniqueness).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/prompt_input.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain user input from the console — prompt_input","text":"function intended interactive use may work expected non-interactive environments (e.g., batch scripts).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_df_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to lookup a keyed data.frame from the sqlite storage database — read_df_sqlite","title":"helper function to lookup a keyed data.frame from the sqlite storage database — read_df_sqlite","text":"helper function lookup keyed data.frame sqlite storage database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_df_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to lookup a keyed data.frame from the sqlite storage database — read_df_sqlite","text":"","code":"read_df_sqlite(   gpa = NULL,   db_file = NULL,   id = NULL,   session = NULL,   run_number = NULL,   table = NULL,   drop_keys = TRUE,   quiet = TRUE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_df_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to lookup a keyed data.frame from the sqlite storage database — read_df_sqlite","text":"gpa glm_pipeline_arguments object used lookup location SQLite database analysis db_file optional string specifying SQLite database read id id subject data belong session session data run_number run_number data table character string table name read drop_keys whether drop identifying metatdata columns data returning object quiet logical indicating whether issue warning table found","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_df_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to lookup a keyed data.frame from the sqlite storage database — read_df_sqlite","text":"data.frame containing requested data. return NULL found","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_multiline_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Multi-Line User Input from Console — read_multiline_input","title":"Read Multi-Line User Input from Console — read_multiline_input","text":"Prompts user multi-line input console specified number consecutive blank lines entered. Optionally collapses result single string.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_multiline_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Multi-Line User Input from Console — read_multiline_input","text":"","code":"read_multiline_input(   instruct = NULL,   prompt = \"> \",   n_blank = 1,   collapse = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_multiline_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Multi-Line User Input from Console — read_multiline_input","text":"instruct Optional character string providing initial instructions display prompting. prompt Character string used prompt symbol input line. Defaults \"> \" . n_blank Integer indicating many consecutive blank lines terminate input. Defaults 1. collapse non-NULL, collapses returned lines single string using given delimiter.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_multiline_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Multi-Line User Input from Console — read_multiline_input","text":"character vector input lines, single collapsed string collapse specified.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/read_multiline_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Multi-Line User Input from Console — read_multiline_input","text":"","code":"if (FALSE) { # \\dontrun{ read_multiline_input(\"Enter notes (press Enter twice to finish):\") } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/remove_nifti_volumes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Specified Timepoints from a 4D NIfTI Image — remove_nifti_volumes","title":"Remove Specified Timepoints from a 4D NIfTI Image — remove_nifti_volumes","text":"function removes specified timepoints (volumes) 4D NIfTI image saves resulting image new file. Timepoints specified using 1-based indexing, consistent R conventions.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/remove_nifti_volumes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Specified Timepoints from a 4D NIfTI Image — remove_nifti_volumes","text":"infile Character string. Path input 4D NIfTI file. remove_tpts Integer vector. Timepoints (1-based) remove image. outfile Character string. Path save output NIfTI file selected volumes.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/remove_nifti_volumes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Specified Timepoints from a 4D NIfTI Image — remove_nifti_volumes","text":"None. function writes new NIfTI file outfile.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/remove_nifti_volumes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Specified Timepoints from a 4D NIfTI Image — remove_nifti_volumes","text":"function uses volumes argument RNifti efficiently read retained timepoints disk. volumes removed, error thrown. input image must 4-dimensional (.e., include time dimension).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/remove_nifti_volumes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Specified Timepoints from a 4D NIfTI Image — remove_nifti_volumes","text":"","code":"if (FALSE) { # \\dontrun{ remove_nifti_volumes(\"input_bold.nii.gz\", remove_tpts = c(1, 2, 100),    outfile = \"trimmed_bold.nii.gz\") } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/resample_template_to_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample TemplateFlow Mask to fMRIPrep Image Using Python — resample_template_to_img","title":"Resample TemplateFlow Mask to fMRIPrep Image Using Python — resample_template_to_img","text":"function uses Python (via reticulate) identify resample TemplateFlow mask match resolution spatial dimensions fMRIPrep BOLD image.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/resample_template_to_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample TemplateFlow Mask to fMRIPrep Image Using Python — resample_template_to_img","text":"","code":"resample_template_to_img(   in_file,   output = NULL,   template_resolution = 1,   suffix = \"mask\",   desc = \"brain\",   extension = \".nii.gz\",   interpolation = \"nearest\",   install_dependencies = TRUE,   overwrite = FALSE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/resample_template_to_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample TemplateFlow Mask to fMRIPrep Image Using Python — resample_template_to_img","text":"in_file Path BIDS-compliant NIfTI file (e.g., fMRIPrep preprocessed BOLD image). output Optional path write resampled image. NULL, BIDS-style filename constructed. template_resolution Integer specifying TemplateFlow resolution index (e.g., 1 = 1mm). suffix TemplateFlow suffix (e.g., \"mask\", \"T1w\"). desc TemplateFlow descriptor (e.g., \"brain\"). extension File extension template image (default \".nii.gz\"). interpolation Interpolation method use resampling. Options \"nearest\", \"linear\", \"continuous\". install_dependencies Logical. TRUE (default), attempts automatically install required Python packages (nibabel, nilearn, templateflow) missing active environment. FALSE, function raise error dependencies found. overwrite Logical. TRUE, overwrite existing output file (present).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/resample_template_to_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample TemplateFlow Mask to fMRIPrep Image Using Python — resample_template_to_img","text":"Invisibly returns TRUE success. new NIfTI file written output.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/resample_template_to_img.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resample TemplateFlow Mask to fMRIPrep Image Using Python — resample_template_to_img","text":"appropriate template inferred space- entity BIDS-formatted input filename. example, input : sub-221256_task-trust_run-1_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz lead selection MNI152NLin2009cAsym template. function depends companion Python script (fetch_matched_template_image.py) bundled BrainGnomes package sourced runtime.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/reset_tracking_sqlite_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to reset tracking SQLite database — reset_tracking_sqlite_db","title":"Internal helper function to reset tracking SQLite database — reset_tracking_sqlite_db","text":"Internal helper function reset tracking SQLite database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/reset_tracking_sqlite_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to reset tracking SQLite database — reset_tracking_sqlite_db","text":"","code":"reset_tracking_sqlite_db(sqlite_db)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/reset_tracking_sqlite_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to reset tracking SQLite database — reset_tracking_sqlite_db","text":"sqlite_db Path SQLite database used tracking","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/rm_niftis.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NIfTI files if they exist — rm_niftis","title":"Remove NIfTI files if they exist — rm_niftis","text":"Remove NIfTI files exist","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/rm_niftis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NIfTI files if they exist — rm_niftis","text":"","code":"rm_niftis(files = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/rm_niftis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NIfTI files if they exist — rm_niftis","text":"files character vector file paths (without .nii .nii.gz extensions).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/rm_niftis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NIfTI files if they exist — rm_niftis","text":"Invisibly returns NULL. Used side effect deleting files.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/rm_niftis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove NIfTI files if they exist — rm_niftis","text":"Deletes one NIfTI files disk. file path provided without extension, .nii.gz appended checking existence.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_bids_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run BIDS validation on the project BIDS directory — run_bids_validation","title":"Run BIDS validation on the project BIDS directory — run_bids_validation","text":"helper submits BIDS validator standalone job. run part run_project() can invoked whenever validation project BIDS directory desired.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_bids_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run BIDS validation on the project BIDS directory — run_bids_validation","text":"","code":"run_bids_validation(scfg, outfile = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_bids_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run BIDS validation on the project BIDS directory — run_bids_validation","text":"scfg bg_project_cfg object returned setup_project() load_project(). outfile name HTML report create BIDS directory. NULL, value stored scfg$bids_validation$outfile used.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_bids_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run BIDS validation on the project BIDS directory — run_bids_validation","text":"job id returned scheduler.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_bids_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run BIDS validation on the project BIDS directory — run_bids_validation","text":"","code":"if (FALSE) { # \\dontrun{   run_bids_validation(study_config, outfile = \"bids_validator_output.html\") } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_fsl_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","title":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","text":"Executes FSL command clean shell environment, support Singularity containers, optional logging via lgr package, flexible control execution output.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_fsl_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","text":"","code":"run_fsl_command(   args,   fsldir = NULL,   echo = TRUE,   run = TRUE,   intern = FALSE,   stop_on_fail = TRUE,   log_file = NULL,   use_lgr = TRUE,   fsl_img = NULL,   bind_paths = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_fsl_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","text":"args character vector specifying FSL command arguments run (e.g., \"fslmaths input.nii.gz -add 1 output.nii.gz\"). fsldir Optional. Path FSL installation directory. NULL, function attempts infer environment system configuration. echo Logical. Whether print command standard output. Defaults TRUE. run Logical. Whether execute command. FALSE, returns command succeeded. Defaults TRUE. intern Logical. TRUE, returns standard output command character vector \"retcode\" attribute. FALSE, returns exit code. Defaults FALSE. stop_on_fail Logical. TRUE, stops execution FSL command returns non-zero exit code. Defaults TRUE. log_file Optional. Path log file recording output. Ignored use_lgr = TRUE. use_lgr Logical. Whether use lgr logging framework. TRUE, configures logs console /file appenders. Defaults TRUE. fsl_img Optional. Path Singularity image containing FSL. provided, command executed within container using singularity exec. bind_paths Optional. Character vector additional directories bind inside Singularity container. current working directory temp directory automatically added.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_fsl_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","text":"intern = FALSE, returns exit code (integer) command. intern = TRUE, returns standard output character vector. cases, \"stdout\" \"stderr\" attached attributes.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_fsl_command.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","text":"function sets FSL environment sourcing fsl.sh, can optionally run FSL commands inside Singularity container. Logging can directed console file using lgr, file using basic cat() logging use_lgr = FALSE. intern = TRUE, command output returned tagged attributes stdout, stderr, retcode. bind_paths argument ensures relevant file paths visible inside container.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_fsl_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run an FSL command with optional Singularity container support and structured logging — run_fsl_command","text":"","code":"if (FALSE) { # \\dontrun{ run_fsl_command(\"fslmaths input.nii.gz -add 1 output.nii.gz\") run_fsl_command(\"fslhd input.nii.gz\", intern = TRUE) } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the processing pipeline — run_project","title":"Run the processing pipeline — run_project","text":"Run processing pipeline","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the processing pipeline — run_project","text":"","code":"run_project(   scfg,   steps = NULL,   subject_filter = NULL,   postprocess_streams = NULL,   debug = FALSE,   force = FALSE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the processing pipeline — run_project","text":"scfg list containing study configuration. steps Character vector pipeline steps execute (\"\" run steps). Options c(\"bids_conversion\", \"mriqc\", \"fmriprep\", \"aroma\", \"postprocess\"). NULL, user prompted steps run. subject_filter Optional character vector data.frame specifying subjects (optionally sessions) process. data.frame provided, must contain sub_id column may include ses_id column filter specific subject/session combinations. postprocess_streams Optional character vector specifying postprocessing streams run. \"postprocess\"`` included steps`, setting lets user choose streams. NULL, postprocess streams run. debug logical value indicating whether run debug mode (verbose output debugging, true processing). force logical value indicating whether force execution steps, regardless current status.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the processing pipeline — run_project","text":"logical value indicating whether processing pipeline successfully run.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/run_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the processing pipeline — run_project","text":"","code":"if (FALSE) { # \\dontrun{     # Assuming you have a valid study configuration list named `study_config`     run_project(study_config, prompt = TRUE, force = FALSE)   } # }"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/save_project_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a study configuration to YAML — save_project_config","title":"Save a study configuration to YAML — save_project_config","text":"Writes configuration file named project_config.yaml inside project's root directory. configuration file already exists, user shown summary differences asked whether overwrite file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/save_project_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a study configuration to YAML — save_project_config","text":"","code":"save_project_config(scfg, file = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/save_project_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a study configuration to YAML — save_project_config","text":"scfg bg_project_cfg object. file Optional path YAML output. Defaults file.path(scfg$metadata$project_directory, \"project_config.yaml\").","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/save_project_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a study configuration to YAML — save_project_config","text":"Invisibly returns scfg.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate Over Censored Timepoints in a 4D NIfTI Image — scrub_interpolate","title":"Interpolate Over Censored Timepoints in a 4D NIfTI Image — scrub_interpolate","text":"Applies cubic spline interpolation 4D fMRI image replace censored (scrubbed) timepoints, defined censor file. Timepoints value 0 censor file interpolated across using voxelwise natural splines, nearest-neighbor extrapolation edges.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate Over Censored Timepoints in a 4D NIfTI Image — scrub_interpolate","text":"","code":"scrub_interpolate(   in_file,   censor_file,   out_desc = NULL,   confound_files = NULL,   overwrite = FALSE,   lg = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate Over Censored Timepoints in a 4D NIfTI Image — scrub_interpolate","text":"in_file Path input 4D NIfTI image file. censor_file Path 1D censor file (e.g., fMRI preprocessing) containing binary vector 1s (keep) 0s (scrub) timepoint. out_desc BIDS description field file output step confound_files Optional character vector confound regressor files update alongside fMRI data. Rows corresponding interpolated volumes filled using natural splines nearest-neighbor extrapolation. overwrite Logical indicating whether overwrite existing interpolated file (default FALSE). lg Optional Logger object (lgr package) logging output. provided, root logger used.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate Over Censored Timepoints in a 4D NIfTI Image — scrub_interpolate","text":"character string giving path interpolated output NIfTI file. file already exists overwrite = FALSE, existing file path returned.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_interpolate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolate Over Censored Timepoints in a 4D NIfTI Image — scrub_interpolate","text":"Timepoints interpolate identified 0 censor_file. replaced using voxelwise cubic spline interpolation across remaining timepoints. Extrapolation beginning end series uses nearest valid value (.e., edge_nn = TRUE). function relies lower-level Rcpp function natural_spline_4d() performs actual interpolation.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_timepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Censored Volumes and Update Confounds — scrub_timepoints","title":"Remove Censored Volumes and Update Confounds — scrub_timepoints","text":"Removes timepoints flagged censor file 4D NIfTI image. confound_files provided, corresponding rows files removed time series remain aligned.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_timepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Censored Volumes and Update Confounds — scrub_timepoints","text":"","code":"scrub_timepoints(   in_file,   censor_file = NULL,   out_desc = NULL,   confound_files = NULL,   overwrite = FALSE,   lg = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_timepoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Censored Volumes and Update Confounds — scrub_timepoints","text":"in_file Path input 4D NIfTI file. censor_file Path 1D censor vector used identify volumes remove. out_desc BIDS description field file output step confound_files Optional character vector confound regressor files update alongside fMRI data. overwrite Logical; overwrite output NIfTI exists. lg Optional Logger object message output.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/scrub_timepoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Censored Volumes and Update Confounds — scrub_timepoints","text":"path scrubbed NIfTI image.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_cli_options.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function that takes a character vector of CLI arguments and replaces matching old values with intended new values — set_cli_options","title":"helper function that takes a character vector of CLI arguments and replaces matching old values with intended new values — set_cli_options","text":"helper function takes character vector CLI arguments replaces matching old values intended new values","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_cli_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function that takes a character vector of CLI arguments and replaces matching old values with intended new values — set_cli_options","text":"","code":"set_cli_options(args = NULL, new_values = NULL, collapse = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_cli_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function that takes a character vector of CLI arguments and replaces matching old values with intended new values — set_cli_options","text":"args character vector existing CLI arguments new_values character vector new CLI arguments substituted args collapse flag indicating whether collapse return argument single string","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_cli_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function that takes a character vector of CLI arguments and replaces matching old values with intended new values — set_cli_options","text":"modified character vector CLI arguments","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_nested_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign values to a nested list using key-value strings or named list — set_nested_values","title":"Assign values to a nested list using key-value strings or named list — set_nested_values","text":"Parses assignments like \"/b/c=10\" named lists like list(\"/b/c\" = 10) returns list(= list(b = list(c = 10))).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_nested_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign values to a nested list using key-value strings or named list — set_nested_values","text":"","code":"set_nested_values(assignments, sep = \"/\", lst = NULL, type_values = TRUE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_nested_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign values to a nested list using key-value strings or named list — set_nested_values","text":"assignments Either character vector assignment strings (e.g., \"/b=1\") named list names encode nested keys (e.g., list(\"/b\" = 1)). sep character used separate keys. Default \"/\". lst Optional list update. NULL, new list created. type_values Logical; whether convert character values appropriate types.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/set_nested_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign values to a nested list using key-value strings or named list — set_nested_values","text":"nested list specified keys values.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_aroma.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure ICA-AROMA denoising application in postprocessing — setup_apply_aroma","title":"Configure ICA-AROMA denoising application in postprocessing — setup_apply_aroma","text":"function configures application ICA-AROMA denoising fMRI data part postprocessing. ICA-AROMA (Pruim et al., 2015) identifies labels motion-related independent components (ICs) using spatiotemporal features, outputs regressors can used remove components.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_aroma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure ICA-AROMA denoising application in postprocessing — setup_apply_aroma","text":"","code":"setup_apply_aroma(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_aroma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure ICA-AROMA denoising application in postprocessing — setup_apply_aroma","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector fields prompt . NULL, fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_aroma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure ICA-AROMA denoising application in postprocessing — setup_apply_aroma","text":"modified version ppcfg $apply_aroma entry updated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_aroma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure ICA-AROMA denoising application in postprocessing — setup_apply_aroma","text":"enabled, step applies AROMA regressors remove noise components BOLD time series using either 'aggressive' 'nonaggressive' regression. Nonaggressive denoising recommended preserves shared variance signal components. step assumes ICA-AROMA already run using tool like fmripost-aroma.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure brain masking for postprocessing — setup_apply_mask","title":"Configure brain masking for postprocessing — setup_apply_mask","text":"function configures optional step applying brain mask functional MRI data postprocessing. step removes signal outside brain (e.g., air non-brain tissue) zeroing voxels outside specified mask. Users can define custom mask file rely default mask derived preprocessing pipeline (e.g., fMRIPrep outputs).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure brain masking for postprocessing — setup_apply_mask","text":"","code":"setup_apply_mask(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure brain masking for postprocessing — setup_apply_mask","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector fields prompted . NULL, fields related brain masking prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure brain masking for postprocessing — setup_apply_mask","text":"modified version ppcfg $apply_mask entry populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_apply_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure brain masking for postprocessing — setup_apply_mask","text":"step especially useful preparing data statistical modeling, constrains analysis -brain voxels reduces computational burden.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_aroma.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure ICA-AROMA denoising — setup_aroma","title":"Configure ICA-AROMA denoising — setup_aroma","text":"function configures ICA-AROMA (Independent Component Analysis-based Automatic Removal Motion Artifacts) step post-fMRIPrep processing. sets scheduling resource parameters used apply AROMA-based denoising BOLD fMRI data using FSL's fsl_regfilt equivalent wrapper.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_aroma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure ICA-AROMA denoising — setup_aroma","text":"","code":"setup_aroma(scfg, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_aroma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure ICA-AROMA denoising — setup_aroma","text":"scfg study configuration object, produced load_project() setup_project(). fields character vector field names prompt . NULL, fields related AROMA prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_aroma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure ICA-AROMA denoising — setup_aroma","text":"modified version scfg list $aroma entry added updated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_aroma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure ICA-AROMA denoising — setup_aroma","text":"ICA-AROMA data-driven denoising method identifies motion-related independent components removes BOLD time series using non-aggressive regression. step run fMRIPrep completed. settings configured specify compute resource usage (e.g., memory, cores, time), command-line options, scheduler-specific arguments running AROMA subject/session. default, function sets: memgb: 32 (memory GB) nhours: 36 (max runtime hours) ncores: 1 (number CPU cores) cli_options: \"\" (extra command-line flags wrapper) sched_args: \"\" (additional job scheduler directives)","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the BIDS conversion settings — setup_bids_conversion","title":"Specify the BIDS conversion settings — setup_bids_conversion","text":"Specify BIDS conversion settings","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the BIDS conversion settings — setup_bids_conversion","text":"","code":"setup_bids_conversion(scfg, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the BIDS conversion settings — setup_bids_conversion","text":"scfg study configuration object, produced load_project setup_project fields character vector fields prompted . NULL, fields prompted .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the BIDS conversion settings — setup_bids_conversion","text":"modified version scfg $bids_conversion populated","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the BIDS validation settings — setup_bids_validation","title":"Specify the BIDS validation settings — setup_bids_validation","text":"Specify BIDS validation settings","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the BIDS validation settings — setup_bids_validation","text":"","code":"setup_bids_validation(scfg, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the BIDS validation settings — setup_bids_validation","text":"scfg study configuration object, produced load_project() setup_project(). fields character vector fields prompted . NULL, BIDS validation fields prompted .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_bids_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the BIDS validation settings — setup_bids_validation","text":"modified version scfg $bids_validation entry populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_compute_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup the compute environment for a study — setup_compute_environment","title":"Setup the compute environment for a study — setup_compute_environment","text":"Setup compute environment study","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_compute_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup the compute environment for a study — setup_compute_environment","text":"","code":"setup_compute_environment(scfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_compute_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup the compute environment for a study — setup_compute_environment","text":"scfg study configuration object, produced load_project setup_project","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_compute_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup the compute environment for a study — setup_compute_environment","text":"modified version scfg $compute_environment populated","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure confound calculation for postprocessing — setup_confound_calculate","title":"Configure confound calculation for postprocessing — setup_confound_calculate","text":"function configures generation confound file postprocessing. resulting file includes nuisance regressors (e.g., motion parameters, CompCor components, DVARS, global signal) may used task-based modeling account noise without directly altering fMRI data.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure confound calculation for postprocessing — setup_confound_calculate","text":"","code":"setup_confound_calculate(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure confound calculation for postprocessing — setup_confound_calculate","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector fields prompt . NULL, relevant fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_calculate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure confound calculation for postprocessing — setup_confound_calculate","text":"modified version ppcfg $confound_calculate entry updated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_calculate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure confound calculation for postprocessing — setup_confound_calculate","text":"Confounds can filtered (e.g., temporal filter applied fMRI data) left unfiltered. Filtered regressors typically include continuous-valued signals (e.g., a_comp_cor_, global signal), spike regressors discrete values (e.g., motion_outlier) filtered. function generates confound regressors file. Actual regression handled separately.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure confound regression for postprocessing — setup_confound_regression","title":"Configure confound regression for postprocessing — setup_confound_regression","text":"function configures voxelwise regression nuisance confounds fMRI data. Confounds typically drawn fMRIPrep confounds file. Users can select confounds temporally filtered match BOLD data (e.g., continuous-valued regressors) filtered (e.g., binary spike regressors).","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure confound regression for postprocessing — setup_confound_regression","text":"","code":"setup_confound_regression(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure confound regression for postprocessing — setup_confound_regression","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector fields prompted . NULL, fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure confound regression for postprocessing — setup_confound_regression","text":"modified version ppcfg $confound_regression entry populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_confound_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure confound regression for postprocessing — setup_confound_regression","text":"Regression applied voxelwise basis. Filtered regressors typically include motion parameters, CompCor components, DVARS, global signal. Unfiltered regressors usually include 0/1 indicators outlier volumes.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_fmriprep.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure fMRIPrep preprocessing settings — setup_fmriprep","title":"Configure fMRIPrep preprocessing settings — setup_fmriprep","text":"function sets fMRIPrep job configuration, including scheduling resource parameters, output specifications, location required files FreeSurfer license. prompts user interactively (selectively fields supplied) modifies study configuration list (scfg) include settings running fMRIPrep.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_fmriprep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure fMRIPrep preprocessing settings — setup_fmriprep","text":"","code":"setup_fmriprep(scfg = NULL, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_fmriprep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure fMRIPrep preprocessing settings — setup_fmriprep","text":"scfg study configuration object, produced load_project() setup_project(). fields character vector fields prompted . NULL, fMRIPrep fields prompted .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_fmriprep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure fMRIPrep preprocessing settings — setup_fmriprep","text":"modified version scfg $fmriprep entry populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_fmriprep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure fMRIPrep preprocessing settings — setup_fmriprep","text":"fMRIPrep robust standardized preprocessing pipeline BOLD structural MRI data organized according BIDS standard. performs motion correction, susceptibility distortion correction, brain extraction, spatial normalization, confound estimation, key steps prepare fMRI data statistical analysis. function allows specify memory, number cores, maximum runtime fMRIPrep jobs, well fMRIPrep-specific options output spaces FreeSurfer license file location.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_intensity_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure intensity normalization settings for postprocessing — setup_intensity_normalization","title":"Configure intensity normalization settings for postprocessing — setup_intensity_normalization","text":"function configures intensity normalization step postprocessing pipeline. Intensity normalization rescales fMRI time series median signal across entire 4D image reaches specified global value (e.g., 10,000). step can help ensure comparability across runs subjects.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_intensity_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure intensity normalization settings for postprocessing — setup_intensity_normalization","text":"","code":"setup_intensity_normalization(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_intensity_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure intensity normalization settings for postprocessing — setup_intensity_normalization","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector field names prompt . NULL, intensity normalization fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_intensity_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure intensity normalization settings for postprocessing — setup_intensity_normalization","text":"modified version ppcfg $intensity_normalize entry updated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_mriqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the MRIQC settings — setup_mriqc","title":"Specify the MRIQC settings — setup_mriqc","text":"Specify MRIQC settings","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_mriqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the MRIQC settings — setup_mriqc","text":"","code":"setup_mriqc(scfg, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_mriqc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the MRIQC settings — setup_mriqc","text":"scfg study configuration object, produced load_project() setup_project(). fields character vector fields prompted . NULL, MRIQC fields prompted .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_mriqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the MRIQC settings — setup_mriqc","text":"modified version scfg $mriqc entry populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the postprocessing steps for a study — setup_postprocess_steps","title":"Specify the postprocessing steps for a study — setup_postprocess_steps","text":"function determines sequence postprocessing steps applied fMRIPrep. Steps included based whether corresponding $enable field TRUE study configuration. user opts override default order, may manually specify custom sequence.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the postprocessing steps for a study — setup_postprocess_steps","text":"","code":"setup_postprocess_steps(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the postprocessing steps for a study — setup_postprocess_steps","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector fields prompted . NULL, fields prompted .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the postprocessing steps for a study — setup_postprocess_steps","text":"modified version ppcfg $postprocess$processing_steps field populated","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_steps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify the postprocessing steps for a study — setup_postprocess_steps","text":"function used set postprocessing steps study. prompts user order processing steps whether apply . order processing steps important, particularly filter certain frequencies fMRI data, must filter regressors later apply data – , confounds fMRI data must match frequency content prior regression. See Hallquist, Hwang, & Luna (2013) Lindquist (2019) details.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_streams.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure postprocessing settings for a study — setup_postprocess_streams","title":"Configure postprocessing settings for a study — setup_postprocess_streams","text":"function enables configures postprocessing steps applied fMRIPrep. Postprocessing may include denoising, smoothing, filtering, intensity normalization, confound regression applied preprocessed BOLD data.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_streams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure postprocessing settings for a study — setup_postprocess_streams","text":"","code":"setup_postprocess_streams(scfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_streams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure postprocessing settings for a study — setup_postprocess_streams","text":"scfg study configuration object, produced setup_project(). fields character vector field names prompt . NULL, postprocessing fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_streams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure postprocessing settings for a study — setup_postprocess_streams","text":"modified version scfg $postprocess field populated. Modified scfg one postprocessing streams","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_postprocess_streams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure postprocessing settings for a study — setup_postprocess_streams","text":"function interactively prompts user (selectively prompts based fields) specify whether postprocessing performed, , step configured. Postprocessing applied outputs fMRIPrep prepare BOLD time series statistical modeling. may include: Applying brain masks Spatial smoothing ICA-AROMA denoising Temporal filtering Intensity normalization Confound calculation regression step optional configurable. function sets default values memory, runtime, cores, invokes series sub-setup functions collect postprocessing parameters. Interactively manage multiple postprocessing configurations. Users can add, edit, delete postprocessing streams. wrapper called setup_project() invokes setup_postprocess_stream() stream.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup the processing pipeline for a new fMRI study — setup_project","title":"Setup the processing pipeline for a new fMRI study — setup_project","text":"Setup processing pipeline new fMRI study","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup the processing pipeline for a new fMRI study — setup_project","text":"","code":"setup_project(input = NULL, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup the processing pipeline for a new fMRI study — setup_project","text":"input bg_project_cfg object, path YAML file, project directory containing project_config.yaml. directory supplied file missing, setup_project starts empty list warning. setup_project , argument may also NULL create new configuration scratch. fields character vector fields prompted . NULL, fields prompted .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup the processing pipeline for a new fMRI study — setup_project","text":"bg_project_cfg list containing study configuration. New fields added based user input, missing entries filled defaults. configuration written project_config.yaml project directory unless user declines overwrite existing file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up project metadata for an fMRI preprocessing study — setup_project_metadata","title":"Set up project metadata for an fMRI preprocessing study — setup_project_metadata","text":"Prompts user configure essential metadata fields study-level configuration object. includes directories DICOM inputs, BIDS-formatted outputs, fMRIPrep outputs, MRIQC reports, TemplateFlow cache, scratch space intermediate files. also ensures required directories exist offers create interactively.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up project metadata for an fMRI preprocessing study — setup_project_metadata","text":"","code":"setup_project_metadata(scfg = NULL, fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up project metadata for an fMRI preprocessing study — setup_project_metadata","text":"scfg study configuration object created setup_project(). fields character vector metadata fields prompt (e.g., \"metadata/project_name\"). NULL, missing unset fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up project metadata for an fMRI preprocessing study — setup_project_metadata","text":"modified version scfg $metadata field populated validated paths project details.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_project_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set up project metadata for an fMRI preprocessing study — setup_project_metadata","text":"function designed used initial study setup, can also used later fill missing metadata revise selected fields. specific fields provided, fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_scrubbing.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure scrubbing of high-motion volumes — setup_scrubbing","title":"Configure scrubbing of high-motion volumes — setup_scrubbing","text":"Generates spike regressors based expressions evaluated confounds file (e.g., \"framewise_displacement > 0.9\" \"-1:1; dvars > 1.5\"). regressors can later used censor volumes modeling.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_scrubbing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure scrubbing of high-motion volumes — setup_scrubbing","text":"","code":"setup_scrubbing(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_scrubbing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure scrubbing of high-motion volumes — setup_scrubbing","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields Optional vector fields prompt .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_scrubbing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure scrubbing of high-motion volumes — setup_scrubbing","text":"Modified scfg $postprocess$scrubbing populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_spatial_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure spatial smoothing settings for fMRI postprocessing — setup_spatial_smooth","title":"Configure spatial smoothing settings for fMRI postprocessing — setup_spatial_smooth","text":"function configures spatial smoothing step postprocessing BOLD fMRI data. Spatial smoothing increases signal--noise ratio averaging nearby voxels can improve statistical properties data, especially group-level analyses.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_spatial_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure spatial smoothing settings for fMRI postprocessing — setup_spatial_smooth","text":"","code":"setup_spatial_smooth(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_spatial_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure spatial smoothing settings for fMRI postprocessing — setup_spatial_smooth","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector field names prompt . NULL, spatial smoothing fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_spatial_smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure spatial smoothing settings for fMRI postprocessing — setup_spatial_smooth","text":"modified version ppcfg $spatial_smooth field populated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_spatial_smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure spatial smoothing settings for fMRI postprocessing — setup_spatial_smooth","text":"user asked whether want apply smoothing, , specify full width half maximum (FWHM) Gaussian smoothing kernel filename prefix. enabled, spatial smoothing applied preprocessed BOLD data using Gaussian kernel user-specified FWHM millimeters. can help improve sensitivity inter-subject alignment, especially standard space. accomplished using FSL's contrast-sensitive susan smoothing command.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_temporal_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure temporal filtering settings for postprocessing — setup_temporal_filter","title":"Configure temporal filtering settings for postprocessing — setup_temporal_filter","text":"function configures temporal filtering step postprocessing pipeline. Temporal filtering removes unwanted frequency components BOLD signal, slow drifts (via high-pass filtering) physiological noise (via low-pass filtering). step often used improve signal quality subsequent statistical analysis.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_temporal_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure temporal filtering settings for postprocessing — setup_temporal_filter","text":"","code":"setup_temporal_filter(ppcfg = list(), fields = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_temporal_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure temporal filtering settings for postprocessing — setup_temporal_filter","text":"ppcfg postprocessing configuration list (nested within scfg$postprocess) fields character vector field names prompt . NULL, temporal filtering fields prompted.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/setup_temporal_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure temporal filtering settings for postprocessing — setup_temporal_filter","text":"modified version ppcfg $temporal_filter entry updated.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/spatial_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply SUSAN-based spatial smoothing to a 4D fMRI image — spatial_smooth","title":"Apply SUSAN-based spatial smoothing to a 4D fMRI image — spatial_smooth","text":"Performs spatial smoothing using FSL's susan algorithm, adapts smoothing based local image intensity structure. smoothing kernel defined fwhm_mm applied extents mask re-applied post-smoothing constrain result original data extents.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/spatial_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply SUSAN-based spatial smoothing to a 4D fMRI image — spatial_smooth","text":"","code":"spatial_smooth(   in_file,   out_desc = NULL,   fwhm_mm = 6,   brain_mask = NULL,   overwrite = FALSE,   lg = NULL,   fsl_img = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/spatial_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply SUSAN-based spatial smoothing to a 4D fMRI image — spatial_smooth","text":"in_file Path input 4D NIfTI file. out_desc BIDS description field file output step fwhm_mm Full-width half-maximum (FWHM) Gaussian kernel millimeters. brain_mask Optional brain mask guide intensity thresholding. NULL, whole image used. overwrite Logical; whether overwrite output file already exists. lg Optional lgr object used logging messages fsl_img Optional Singularity image execute FSL commands containerized environment.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/spatial_smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply SUSAN-based spatial smoothing to a 4D fMRI image — spatial_smooth","text":"Path spatially smoothed output NIfTI file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/spatial_smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply SUSAN-based spatial smoothing to a 4D fMRI image — spatial_smooth","text":"SUSAN threshold computed based 2nd 50th percentiles intensity values. extents mask created prior smoothing ensure new voxels introduced output.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_sqlite_query.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to establish sqlite connection and submit query — submit_sqlite_query","title":"helper function to establish sqlite connection and submit query — submit_sqlite_query","text":"helper function establish sqlite connection submit query","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_sqlite_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to establish sqlite connection and submit query — submit_sqlite_query","text":"","code":"submit_sqlite_query(   str = NULL,   sqlite_db = NULL,   params = NULL,   busy_timeout = 10 )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_sqlite_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to establish sqlite connection and submit query — submit_sqlite_query","text":"str Character query statement execute sqlite_db Character path SQLite database params Optional list parameters pass statement busy_timeout Time (s) retry write operations; default 10 s","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_sqlite_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to establish sqlite connection and submit query — submit_sqlite_query","text":"description","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_tracking_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to submit a query to the tracking SQLite database — submit_tracking_query","title":"Internal helper function to submit a query to the tracking SQLite database — submit_tracking_query","text":"Internal helper function submit query tracking SQLite database","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_tracking_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to submit a query to the tracking SQLite database — submit_tracking_query","text":"","code":"submit_tracking_query(str, sqlite_db, params = NULL)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/submit_tracking_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to submit a query to the tracking SQLite database — submit_tracking_query","text":"str Character string SQLite query sqlite_db Path SQLite database used tracking params List parameters/arguments used query","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/summary.bg_project_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for study configuration object — summary.bg_project_cfg","title":"summary method for study configuration object — summary.bg_project_cfg","text":"summary method study configuration object","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/summary.bg_project_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for study configuration object — summary.bg_project_cfg","text":"","code":"# S3 method for class 'bg_project_cfg' summary(object, ...)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/summary.bg_project_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for study configuration object — summary.bg_project_cfg","text":"object study configuration object (bg_project_cfg) summarize. ... additional parameters summary (used)","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/summary.bg_project_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for study configuration object — summary.bg_project_cfg","text":"Invisibly returns x printing contents. function called side effect printing formatted summary study configuration.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/temporal_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply temporal filtering to a 4D NIfTI image — temporal_filter","title":"Apply temporal filtering to a 4D NIfTI image — temporal_filter","text":"Apply high-pass /low-pass temporal filtering fMRI time series. default calls FSL's fslmaths -bptf Butterworth filter implemented butterworth_filter_4d can also used. Filter cutoffs specified Hz; FSL implementation internally converted sigma values volumes using standard FWHM--sigma transformation.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/temporal_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply temporal filtering to a 4D NIfTI image — temporal_filter","text":"","code":"temporal_filter(   in_file,   out_desc = NULL,   low_pass_hz = 0,   high_pass_hz = 1/120,   tr = NULL,   overwrite = FALSE,   lg = NULL,   fsl_img = NULL,   method = c(\"fslmaths\", \"butterworth\") )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/temporal_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply temporal filtering to a 4D NIfTI image — temporal_filter","text":"in_file Path input 4D NIfTI file. out_desc BIDS description field file output step low_pass_hz Low-pass filter cutoff Hz. Use 0 skip. high_pass_hz High-pass filter cutoff Hz. Use Inf skip. tr Repetition time (TR) seconds. Required convert Hz volumes. overwrite Logical; whether overwrite output file exists. lg Optional lgr object used logging messages fsl_img Optional Singularity image execute FSL commands containerized environment. method Character. \"fslmaths\" use FSL's -bptf \"butterworth\" Butterworth filter.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/temporal_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply temporal filtering to a 4D NIfTI image — temporal_filter","text":"path temporally filtered output NIfTI file.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/temporal_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply temporal filtering to a 4D NIfTI image — temporal_filter","text":"mean image added back filtering preserve signal intensity. Filtering skipped output file already exists overwrite = FALSE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/update_tracked_job_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Job Status in Tracking SQLite Database — update_tracked_job_status","title":"Update Job Status in Tracking SQLite Database — update_tracked_job_status","text":"Updates status specific job tracking database, optionally cascading failure status downstream jobs.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/update_tracked_job_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Job Status in Tracking SQLite Database — update_tracked_job_status","text":"","code":"update_tracked_job_status(   sqlite_db = NULL,   job_id = NULL,   status,   cascade = FALSE,   exclude = NULL )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/update_tracked_job_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Job Status in Tracking SQLite Database — update_tracked_job_status","text":"sqlite_db Character string. Path SQLite database file used job tracking. job_id Character string numeric. ID job update. numeric, coerced string. status Character string. job status set. Must one : \"QUEUED\", \"STARTED\", \"FAILED\", \"COMPLETED\", \"FAILED_BY_EXT\". cascade Logical. TRUE, status failure type (\"FAILED\" \"FAILED_BY_EXT\"), failure recursively propagated child jobs listed exclude. exclude Character numeric vector. One job IDs exclude cascading failure updates.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/update_tracked_job_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Job Status in Tracking SQLite Database — update_tracked_job_status","text":"Invisibly returns NULL. Side effect modification SQLite job tracking table.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/update_tracked_job_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update Job Status in Tracking SQLite Database — update_tracked_job_status","text":"function updates job status timestamp corresponding status type: \"QUEUED\" -> updates time_submitted \"STARTED\" -> updates time_started \"FAILED\", \"COMPLETED\", \"FAILED_BY_EXT\" -> updates time_ended cascade = TRUE, status \"FAILED\" \"FAILED_BY_EXT\", dependent jobs (determined via get_tracked_job_status()) recursively marked \"FAILED_BY_EXT\", unless status already \"FAILED\" listed exclude. sqlite_db job_id invalid missing, function fails silently returns NULL.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check whether a given file or directory exists and, optionally, is readable — validate_exists","title":"Helper function to check whether a given file or directory exists and, optionally, is readable — validate_exists","text":"Helper function check whether given file directory exists , optionally, readable","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check whether a given file or directory exists and, optionally, is readable — validate_exists","text":"","code":"validate_exists(   input,   description = \"\",   directory = FALSE,   prompt_change = FALSE,   check_readable = TRUE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check whether a given file or directory exists and, optionally, is readable — validate_exists","text":"input file directory check existence description character string describing file prompted change directory TRUE, check whether directory exists. FALSE (default), check file exists prompt_change TRUE, file/directory exists, ask user wish change value. , return FALSE check_readable TRUE, validation fails (return FALSE) file/directory exists readable","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check whether a given file or directory exists and, optionally, is readable — validate_exists","text":"boolean (TRUE/FALSE) indicating whether file directory exists valid","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_postprocess_config_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate postprocess configuration block — validate_postprocess_config_single","title":"Validate postprocess configuration block — validate_postprocess_config_single","text":"Validate postprocess configuration block","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_postprocess_config_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate postprocess configuration block — validate_postprocess_config_single","text":"","code":"validate_postprocess_config_single(ppcfg, cfg_name = NULL, quiet = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_postprocess_config_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate postprocess configuration block — validate_postprocess_config_single","text":"ppcfg postprocess configuration block quiet flag indicating whether suppress messages","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the structure of a study configuration object — validate_project","title":"Validate the structure of a study configuration object — validate_project","text":"Validate structure study configuration object","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the structure of a study configuration object — validate_project","text":"","code":"validate_project(scfg = list(), quiet = FALSE)"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/validate_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the structure of a study configuration object — validate_project","text":"scfg study configuration file produced load_project setup_project","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":null,"dir":"Reference","previous_headings":"","what":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"intended give control job dependencies within R formal PBS depend approach insufficient, especially case script spawns child jobs need scheduled complete parent script continue.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"","code":"wait_for_job(   job_ids,   repolling_interval = 60,   max_wait = 60 * 60 * 24,   scheduler = \"local\",   quiet = TRUE,   stop_on_timeout = TRUE )"},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"job_ids One job ids existing PBS slurm jobs, process ids local process scheduler=\"sh\". repolling_interval often recheck job status, seconds. Default: 30 max_wait long wait job giving , seconds. Default: 24 hours (86,400 seconds) scheduler scheduler used job execution. Options: c(\"torque\", \"qsub\", \"slurm\", \"sbatch\", \"sh\", \"local\") quiet TRUE, wait_for_job print status updates jobs. FALSE, function prints status updates tracked job user knows holding progress. stop_on_timeout Logical. TRUE, function throws error max_wait exceeded. FALSE, returns FALSE instead stopping. Default TRUE.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"Returns (invisibly) TRUE jobs completed successfully, FALSE job failed timeout occurred stop_on_timeout = FALSE. Otherwise, stops execution error timeout exceeded.","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"Note scheduler argument, \"torque\" \"qsub\" ; \"slurm\" \"sbatch\" , \"sh\" \"local\" .","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"Michael Hallquist","code":""},{"path":"https://uncdependlab.github.io/BrainGnomes/reference/wait_for_job.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function pauses execution of an R script while a scheduled qsub job is not yet complete. — wait_for_job","text":"","code":"if (FALSE) { # \\dontrun{ # example on qsub/torque cluster wait_for_job(\"7968857.torque01.util.production.int.aci.ics.psu.edu\", scheduler = \"torque\")  # example of waiting for two jobs on slurm cluster wait_for_job(c(\"24147864\", \"24147876\"), scheduler = \"slurm\")  # example of waiting for two jobs on local machine wait_for_job(c(\"9843\", \"9844\"), scheduler = \"local\") } # }"}]
